Index: ../BomberMan1.0/src/resources/levels/Level5.txt
===================================================================
diff --git a/../BomberMan1.0/src/resources/levels/Level5.txt b/../BomberMan1.0/src/resources/levels/Level5.txt
deleted file mode 100644
--- a/../BomberMan1.0/src/resources/levels/Level5.txt	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,48 +0,0 @@
-5 13 31
-###############################
-#p     x#   #***   7  **     *#
-#*#*# #*# # # # # # # # # # #*#
-#       *4    #**     5     **#
-# * #     #   #   #     #     #
-# * # #   #   #   # #   #   # #
-# * #   # #   #   #   # #   # #
-#  B#     #   #   #3 F  #**   #
-#*# # # # # # # # # # # # # #*#
-#b     *** W     2    *     ###
-#*# # # # # # # #s# # # # # #l#
-#s   3  *  f**#      **     x*#
-###############################
-
-
-Mô tả cấu trúc tệp cấu hình màn chơi:
-1/ Dòng đầu tiên bao gồm 3 số nguyên L, R, C:
-L - số thứ tự màn chơi
-R - số hàng của bản đồ
-C - số cột của bản đồ
-
-2/ R dòng tiếp theo, mỗi dòng có C kí tự. Mỗi kí tự đại diện cho một đối tượng trên bản đồ:
-Tiles:
-# - Wall
-* - Brick
-x - Portal
-
-Character:
-p - Bomber
-1 - Balloon
-2 - Oneal
-3 - Doll
-4 - Minvo
-5 - Kondonria
-6 - Dragon
-7 - batMonster
-8 - Phoenix
-Items:
-b - Bomb Item
-f - Flame Item
-s - Speed Item
-B - Bomb Pass Item
-F - Flame Pass Item
-W - Brick Pass Item
-l - Plus 1 live
-
-Kí tự khác các kí tự trên - Grass
Index: ../BomberMan1.0/src/main/java/GameCharacter/Bomber.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GameCharacter/Bomber.java b/../BomberMan1.0/src/main/java/GameCharacter/Bomber.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GameCharacter/Bomber.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,356 +0,0 @@
-package GameCharacter;
-
-import GameBomb.Bomb;
-import GameBomb.BombAnimation;
-import GameMonster.Monster;
-import GameMapEntity.EntityObject.Brick;
-import GameMapEntity.EntityObject.Grass;
-import GameMapEntity.EntityObject.Portal;
-import GameMapEntity.EntityObject.Wall;
-import GameMapEntity.GameEntity;
-import GameMapGraphics.KeyboardInput;
-import GameSprite.GameSprite;
-import Main.BomberManGame;
-import GamePowerUpItems.Powerup;
-import GameSound.GameSound;
-import javafx.scene.canvas.GraphicsContext;
-
-import java.util.ArrayList;
-import java.util.List;
-public class Bomber extends BomberCharacter {
-    private KeyboardInput input;
-    private int maxBom = 1;
-    private int frameLength = 1;
-    public boolean canPassBom = false;
-    public boolean canPassFlame = false;
-    private boolean canPassBrick = false;
-    private List<Bomb> bombList = new ArrayList<>();
-    private boolean isCollideWithAPortal = false;
-    private boolean killAllEnemies = false;
-    public int timeToStopFlame = 0;
-    public int timeToStopBomb = 0;
-
-    //private Sound soundMoving = new Sound(Sound.MOVING_SOUND);
-
-    private final int[] addToXToCheckCollision =
-            {2, GameSprite.SCALED_SIZE - 10, GameSprite.SCALED_SIZE - 10, 2};
-    private final int[] addToYToCheckCollision =
-            {3, 3, GameSprite.SCALED_SIZE - 6, GameSprite.SCALED_SIZE - 6};
-    private final int[] addToXToSetPrecision =
-            {-5, GameSprite.SCALED_SIZE + 5, GameSprite.SCALED_SIZE - 20, 10};
-    private final int[] addToYToCSetPrecision =
-            {15, 15, GameSprite.SCALED_SIZE + 1, GameSprite.SCALED_SIZE + 1};
-
-
-    /**
-     * Create a bomber that react to user input.
-     */
-    public Bomber(int x, int y, KeyboardInput keyboardInput) {
-        super(x, y, GameSprite.playerDown.getFxImage());
-        direction = 1;
-        velocity = 2;
-        input = keyboardInput;
-    }
-
-    public void restoreBomber(Bomber newBomber) {
-        reset();
-
-        this.input = newBomber.input;
-        this.velocity = newBomber.velocity;
-        this.maxBom = newBomber.maxBom;
-        this.frameLength = newBomber.frameLength;
-        this.canPassBom = newBomber.canPassBom;
-        this.canPassBrick = newBomber.canPassBrick;
-        this.canPassFlame = newBomber.canPassFlame;
-    }
-
-    public void reset() {
-        this.setImg(GameSprite.playerDown.getFxImage());
-        this.direction = 1;
-        this.bombList = new ArrayList<>();
-        this.killAllEnemies = false;
-        this.isCollideWithAPortal = false;
-    }
-
-    @Override
-    public void update() {
-        animate();
-        bombUpdate();
-        ifCollisionWithFlameOrEnemyOrItem();
-
-        input = BomberManGame.getGameCanvas().getInput();
-
-        if (isStartDie()) {
-            // BombermanGame.setLives(BombermanGame.getLives() - 1);
-            if (timeShowDeath-- > 0) {
-                this.setImg(GameSprite
-                        .movingSprite(GameSprite.playerDead1, GameSprite.playerDead2, GameSprite.playerDead3, animation, 30)
-                        .getFxImage());
-            } else {
-                setAlive(false);
-                setStartDie(false);
-                setTimeShowDeath(100);
-            }
-        } else {
-
-            if (input.space && bombList.size() < maxBom) {
-                GameEntity e = BomberManGame.getGameCanvas().getEntityInCoodinate(getXUnit(), getYUnit());
-                if (e == null) {
-                    bombList.add(new Bomb(getXUnit(), getYUnit(), frameLength, this));
-                }
-            }
-            if (input.up || input.right || input.left || input.down) {
-                setMoving(true);
-            } else {
-                setMoving(false);
-                switch (direction) {
-                    case 0:
-                        this.setImg(GameSprite.playerUp.getFxImage());
-                        break;
-                    case 1:
-                        this.setImg(GameSprite.playerDown.getFxImage());
-                        break;
-                    case 2:
-                        this.setImg(GameSprite.playerLeft.getFxImage());
-                        break;
-                    case 3:
-                        this.setImg(GameSprite.playerRight.getFxImage());
-                        break;
-                    default:
-                        break;
-                }
-            }
-            /*if (isMoving()) {
-                // setPrecision();
-                if (!soundMoving.isRunning()) {
-                    soundMoving.play();
-                }
-                calculateMove();
-            } else {
-                soundMoving.stop();
-            }*/
-        }
-    }
-
-    @Override
-    public void render() {}
-
-    @Override
-    public void calculateMove() {
-        input = BomberManGame.getGameCanvas().getInput();
-        // setPrecision();
-        if (input.up) {
-            y -= velocity;
-            // setPrecision(input);
-            if (!canMove()) {
-                y += velocity;
-            }
-            setDirection(0);
-            this.setImg(GameSprite.movingSprite(GameSprite.playerUp, GameSprite.playerUp1, GameSprite.playerUp2,
-                    animation, timeTransfer).getFxImage());
-        } else if (input.down) {
-            y += velocity;
-
-            if (!canMove()) {
-                setPrecision(input);
-                y -= velocity;
-            }
-            setDirection(1);
-            this.setImg(GameSprite.movingSprite(GameSprite.playerDown, GameSprite.playerDown1, GameSprite.playerDown2,
-                    animation, timeTransfer).getFxImage());
-        } else if (input.left) {
-            x -= velocity;
-            if (!canMove()) {
-                setPrecision(input);
-                x += velocity;
-            }
-            setDirection(2);
-            this.setImg(GameSprite.movingSprite(GameSprite.playerLeft, GameSprite.playerLeft1, GameSprite.playerLeft2,
-                    animation, timeTransfer).getFxImage());
-        } else {
-            x += velocity;
-            if (!canMove()) {
-                setPrecision(input);
-                x -= velocity;
-
-            }
-            setDirection(3);
-            this.setImg(GameSprite.movingSprite(GameSprite.playerRight, GameSprite.playerRight1, GameSprite.playerRight2,
-                    animation, timeTransfer).getFxImage());
-        }
-    }
-
-    @Override
-    public boolean canMove() {
-        for (int i = 0; i < 4; i++) { // check collision for 4 corners
-            int newX = (getX() + addToXToCheckCollision[i]) / GameSprite.SCALED_SIZE;
-            int newY = (getY() + addToYToCheckCollision[i]) / GameSprite.SCALED_SIZE;
-            GameEntity e = BomberManGame.getGameCanvas().getEntityInCoodinate(newX, newY);
-
-            if (e instanceof Wall || (e instanceof Brick && !canPassBrick)) {
-                return false;
-            }
-            if (e instanceof Portal) {
-                if (killAllEnemies) {
-                    isCollideWithAPortal = true;
-                   // soundMoving.stop();
-                    return true;
-                }
-                return false;
-                // isCollideWithAPortal = true;
-                // return true;
-            }
-            if (e instanceof Bomb bomb) {
-                if (canPassBom) {
-                    bomb.setAllowPass(true);
-                } else {
-                    if (!bomb.isAllowPass())
-                        return false;
-                }
-            }
-        }
-        return true;
-    }
-
-    @Override
-    public void setPrecision(KeyboardInput input) {
-        for (int i = 0; i < 4; i++) {
-            int newX = (getX() + addToXToCheckCollision[i]) / GameSprite.SCALED_SIZE;
-            int newY = (getY() + addToYToCheckCollision[i]) / GameSprite.SCALED_SIZE;
-            GameEntity collision = BomberManGame.getGameCanvas().getEntityInCoodinate(newX, newY);
-            int preX = (getX() + addToXToSetPrecision[i]) / GameSprite.SCALED_SIZE;
-            int preY = (getY() + addToYToCSetPrecision[i]) / GameSprite.SCALED_SIZE;
-            GameEntity check = BomberManGame.getGameCanvas().getGrass(preX, preY);
-            boolean isCollided = collision instanceof Wall || collision instanceof Brick;
-
-            if (check instanceof Grass && isCollided && i == 0) {
-                y = preY * GameSprite.SCALED_SIZE;
-            }
-
-            if (check instanceof Grass && isCollided && i == 1) {
-                y = preY * GameSprite.SCALED_SIZE;
-            }
-
-            if (check instanceof Grass && isCollided && i == 2) {
-                x = preX * GameSprite.SCALED_SIZE + 4;
-            }
-
-            if (check instanceof Grass && isCollided && i == 3) {
-                x = preX * GameSprite.SCALED_SIZE;
-            }
-        }
-    }
-
-    public List<Bomb> getBombList() {
-        return bombList;
-    }
-    //
-    // public void setCanPassBom(boolean canPassBom) {
-    // this.canPassBom = canPassBom;
-    // }
-    //
-    // public boolean isCanPassBom() {
-    // return canPassBom;
-    // }
-
-    /**
-     * Render bomb.
-     */
-    public void bombRender(GraphicsContext gc) {
-        for (Bomb b : bombList) {
-            if (b.isExplored()) {
-                b.frameRender(gc);
-            } else {
-                b.render(gc);
-            }
-        }
-    }
-
-    public void ifCollisionWithFlameOrEnemyOrItem() {
-        int x = getXUnit();
-        int y = getYUnit();
-        for (Bomb b : bombList) {
-            List<BombAnimation> fl = b.getFlameList();
-            for (BombAnimation f : fl) {
-                if (f.getXUnit() == x && f.getYUnit() == y) {
-                    if (!canPassFlame && !startDie) {
-                        setStartDie(true);
-                        //new Sound(Sound.DEAD_SOUND).play();
-                        BomberManGame.setLives(BomberManGame.getLives() - 1);
-                    }
-                    break;
-                }
-            }
-        }
-        GameEntity e = BomberManGame.getGameCanvas().getEntityInCoodinate(x, y);
-        if (e instanceof Monster && !startDie) {
-            setStartDie(true);
-            //new Sound(Sound.DEAD_SOUND).play();
-            BomberManGame.setLives(BomberManGame.getLives() - 1);
-        }
-
-        if (e instanceof Powerup powerup) {
-            new GameSound(GameSound.EAT_POWERUP_SOUND).play_sound();
-            switch (powerup.getId()) {
-                case "psi":
-                    if (velocity < 3) { // velocity max = 3
-                        velocity++;
-                    }
-                    break;
-                case "pbi":
-                    if (maxBom < 5) { // maxbom highest = 5
-                        maxBom++;
-                    }
-                    break;
-                case "pfi":
-                    if (frameLength < 4) { // lenght max = 4
-                        frameLength++;
-                    }
-                    break;
-                case "bpi":
-                    canPassBom = true;
-                    timeToStopBomb += 50 * 37;
-
-                    break;
-                case "fpi":
-                    canPassFlame = true;
-                    timeToStopFlame += 50 * 37;
-                    break;
-                case "wpi":
-                    canPassBrick = true; // hiem
-                    break;
-                case "pli":
-                    BomberManGame.setLives(BomberManGame.getLives() + 1);
-                    break;
-                default:
-                    break;
-            }
-            e.setImg(null);
-        }
-    }
-
-    /**
-     * Update bomb.
-     */
-    public void bombUpdate() {
-        bombList.forEach(Bomb::update);
-        for (Bomb b : bombList) {
-            if (b.getImg() == null) {
-                bombList.remove(b);
-                break;
-            } else {
-                for (BombAnimation fl : b.getFlameList()) {
-                    fl.update();
-                }
-            }
-        }
-    }
-
-    public void setKillAllEnemies(boolean killAllEnemies) {
-        this.killAllEnemies = killAllEnemies;
-    }
-
-    public boolean isCollideWithAPortal() {
-        return isCollideWithAPortal;
-    }
-}
Index: ../.idea/vcs.xml
===================================================================
diff --git a/../.idea/vcs.xml b/../.idea/vcs.xml
deleted file mode 100644
--- a/../.idea/vcs.xml	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="VcsDirectoryMappings">
-    <mapping directory="" vcs="Git" />
-  </component>
-</project>
\ No newline at end of file
Index: ../.idea/misc.xml
===================================================================
diff --git a/../.idea/misc.xml b/../.idea/misc.xml
deleted file mode 100644
--- a/../.idea/misc.xml	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,14 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ExternalStorageConfigurationManager" enabled="true" />
-  <component name="MavenProjectsManager">
-    <option name="originalFiles">
-      <list>
-        <option value="$PROJECT_DIR$/BomberMan1.0/pom.xml" />
-      </list>
-    </option>
-  </component>
-  <component name="ProjectRootManager" version="2" project-jdk-name="18" project-jdk-type="JavaSDK">
-    <output url="file://$PROJECT_DIR$/out" />
-  </component>
-</project>
\ No newline at end of file
Index: ../.idea/codeStyles/codeStyleConfig.xml
===================================================================
diff --git a/../.idea/codeStyles/codeStyleConfig.xml b/../.idea/codeStyles/codeStyleConfig.xml
deleted file mode 100644
--- a/../.idea/codeStyles/codeStyleConfig.xml	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,5 +0,0 @@
-<component name="ProjectCodeStyleConfiguration">
-  <state>
-    <option name="PREFERRED_PROJECT_CODE_STYLE" value="Default" />
-  </state>
-</component>
\ No newline at end of file
Index: ../BomberMan1.0/src/main/java/GameMonster/Monster.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GameMonster/Monster.java b/../BomberMan1.0/src/main/java/GameMonster/Monster.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GameMonster/Monster.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,143 +0,0 @@
-package GameMonster;
-
-import GameBomb.Bomb;
-import GameCharacter.Bomber;
-import GameMapEntity.EntityObject.Brick;
-import GameMapEntity.EntityObject.Portal;
-import GameMapEntity.EntityObject.Wall;
-import GameMapEntity.GameAnimationEntity;
-import GameMapEntity.GameEntity;
-import GameMapGraphics.KeyboardInput;
-import GamePowerUpItems.Powerup;
-import GameSprite.GameSprite;
-import Main.BomberManGame;
-import javafx.scene.image.Image;
-
-import java.util.List;
-
-abstract public class Monster extends GameAnimationEntity {
-    protected  int velocity = 1;
-    protected boolean isAlive = true;
-    protected int direction = 0;
-
-    // 0 up, 1 down, 2 left, 3 right
-    protected Bomber bomber = new Bomber(0, 0, new KeyboardInput());
-    protected int timeDead = 40;
-    protected int flameHit = 0;
-
-    public static final int[] AddToXToCheckCollision =
-            {2, GameSprite.SCALED_SIZE - 2, GameSprite.SCALED_SIZE - 2, 2};
-    public static final int[] AddToYToCheckCollision =
-            {2, 2, GameSprite.SCALED_SIZE - 2, GameSprite.SCALED_SIZE - 2};
-
-    public Monster(int xUnit, int yUnit, Image img) {
-        super(xUnit, yUnit, img);
-    }
-
-    /**
-     * Check if monster can move to coordinate [x,y].
-     *
-     * @return True if monster can go to [x,y] and false other wise
-     */
-
-     public boolean canMove(int x, int y) {
-        int xUnit = (int) x / GameSprite.SCALED_SIZE;
-        int yUnit = (int) y / GameSprite.SCALED_SIZE;
-        GameEntity e = BomberManGame.getGameCanvas().getEntityInCoodinate(xUnit, yUnit);
-        if (this instanceof Kondoria && e instanceof Brick) {
-            return true;
-        }
-         if (this instanceof BatMonster && recognizeBomb(x, y)) {
-      return false;
-    }
-    return !(e instanceof Wall || e instanceof Brick || e instanceof Bomb || e instanceof Portal);
-    }
-
-    public boolean recognizeBomb(int x, int y) {
-        int xUnit = (int) x / GameSprite.SCALED_SIZE;
-        int yUnit = (int) y / GameSprite.SCALED_SIZE;
-        GameEntity e = BomberManGame.getGameCanvas().getEntityInCoodinate(xUnit + 1, yUnit);
-        GameEntity e1 = BomberManGame.getGameCanvas().getEntityInCoodinate(xUnit - 1, yUnit);
-        GameEntity e2 = BomberManGame.getGameCanvas().getEntityInCoodinate(xUnit, yUnit + 1);
-        GameEntity e3 = BomberManGame.getGameCanvas().getEntityInCoodinate(xUnit, yUnit - 1);
-        if (e instanceof Bomb) {
-            return true;
-        }
-        if (e1 instanceof Bomb) {
-            return true;
-        }
-        if (e2 instanceof Bomb) {
-            return true;
-        }
-        if (e3 instanceof Bomb) {
-            return true;
-        }
-        return false;
-    }
-    public abstract void deadAnimation();
-    public void ifCollideWithPowerupOrFlame() {
-        int x = getXUnit();
-        int y = getYUnit();
-        // if (this instanceof Dragon) {
-        // flameHit++;
-        // System.out.println(flameHit);
-        // }
-        // enemy gap bat ky item auto se tang speed
-        GameEntity e = BomberManGame.getGameCanvas().getEntityInCoodinate(x, y);
-        if (e instanceof Powerup) {
-            // if (!(this instanceof Dragon)) {
-            // setVelocity(velocity + 1);
-            // }
-            e.setImg(null);
-        }
-    }
-
-    /**
-     * If collide with bomb then turn around.
-     */
-    public void collideWithBomb() {
-        List<Bomb> bombs = bomber.getBombList();
-        for (Bomb b : bombs) {
-            if (b.getXUnit() == this.getXUnit() && b.getYUnit() == this.getYUnit()) {
-                setVelocity(0);
-                break;
-            }
-        }
-    }
-    public int getAnimate() {
-        return animation;
-    }
-
-    public void setBomber(Bomber bomber) {
-        this.bomber = bomber;
-    }
-
-    public int getVelocity() {
-        return velocity;
-    }
-
-    public int getDirection() {
-        return direction;
-    }
-
-    public void setDirection(int direction) {
-        this.direction = direction;
-    }
-
-    public void setAlive(boolean alive) {
-        isAlive = alive;
-    }
-
-    public void setVelocity(int velocity) {
-        this.velocity = velocity;
-    }
-
-    public void setHit(int h) {
-        this.flameHit = h;
-        // System.out.println(flameHit);
-    }
-
-    public int getHit() {
-        return flameHit;
-    }
-}
Index: ../BomberMan1.0/src/main/java/GameMapEntity/EntityObject/Portal.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GameMapEntity/EntityObject/Portal.java b/../BomberMan1.0/src/main/java/GameMapEntity/EntityObject/Portal.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GameMapEntity/EntityObject/Portal.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,14 +0,0 @@
-package GameMapEntity.EntityObject;
-
-import GameMapEntity.GameEntity;
-import GameSprite.GameSprite;
-
-public class Portal extends GameEntity {
-
-    public Portal(int x, int y) {
-        super(x, y, GameSprite.portal.getFxImage());
-    }
-
-    @Override
-    public void update() {}
-}
Index: ../BomberMan1.0/src/main/java/GamePowerUpItems/PlusSpeedItem.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GamePowerUpItems/PlusSpeedItem.java b/../BomberMan1.0/src/main/java/GamePowerUpItems/PlusSpeedItem.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GamePowerUpItems/PlusSpeedItem.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,10 +0,0 @@
-package GamePowerUpItems;
-
-import GameSprite.GameSprite;
-
-public class PlusSpeedItem extends Powerup {
-
-  public PlusSpeedItem(int x, int y) {
-    super(x, y, GameSprite.powerupSpeed.getFxImage());
-  }
-}
Index: ../.idea/encodings.xml
===================================================================
diff --git a/../.idea/encodings.xml b/../.idea/encodings.xml
deleted file mode 100644
--- a/../.idea/encodings.xml	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="Encoding">
-    <file url="file://$PROJECT_DIR$/BomberMan1.0/src/main/java" charset="UTF-8" />
-    <file url="file://$PROJECT_DIR$/BomberMan1.0/src/main/resources" charset="UTF-8" />
-  </component>
-</project>
\ No newline at end of file
Index: ../.idea/.gitignore
===================================================================
diff --git a/../.idea/.gitignore b/../.idea/.gitignore
deleted file mode 100644
--- a/../.idea/.gitignore	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,3 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
Index: ../.idea/modules.xml
===================================================================
diff --git a/../.idea/modules.xml b/../.idea/modules.xml
deleted file mode 100644
--- a/../.idea/modules.xml	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectModuleManager">
-    <modules>
-      <module fileurl="file://$PROJECT_DIR$/.idea/BomberManGame_Team06_1.0.iml" filepath="$PROJECT_DIR$/.idea/BomberManGame_Team06_1.0.iml" />
-    </modules>
-  </component>
-</project>
\ No newline at end of file
Index: ../BomberMan1.0/src/main/java/GamePowerUpItems/PlusLiveItem.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GamePowerUpItems/PlusLiveItem.java b/../BomberMan1.0/src/main/java/GamePowerUpItems/PlusLiveItem.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GamePowerUpItems/PlusLiveItem.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,10 +0,0 @@
-package GamePowerUpItems;
-
-import GameSprite.GameSprite;
-
-public class PlusLiveItem extends Powerup {
-
-  public PlusLiveItem(int x, int y) {
-    super(x, y, GameSprite.powerupDetonator.getFxImage());
-  }
-}
Index: ../BomberMan1.0/src/main/java/GamePowerUpItems/BrickPassItem.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GamePowerUpItems/BrickPassItem.java b/../BomberMan1.0/src/main/java/GamePowerUpItems/BrickPassItem.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GamePowerUpItems/BrickPassItem.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,10 +0,0 @@
-package GamePowerUpItems;
-
-import GameSprite.GameSprite;
-
-public class BrickPassItem extends Powerup {
-
-  public BrickPassItem(int x, int y) {
-    super(x, y, GameSprite.powerupWallpass.getFxImage());
-  }
-}
Index: ../BomberMan1.0/src/main/java/GameMonster/Kondoria.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GameMonster/Kondoria.java b/../BomberMan1.0/src/main/java/GameMonster/Kondoria.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GameMonster/Kondoria.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,87 +0,0 @@
-package GameMonster;
-
-import GameMonster.moveMethod.moveType2;
-import GameSprite.GameSprite;
-
-public class Kondoria extends Monster {
-  private moveType2 moveType = new moveType2();
-
-  public Kondoria(int xUnit, int yUnit) {
-    super(xUnit, yUnit, GameSprite.kondoriaLeft1.getFxImage());
-    velocity = 2;
-  }
-
-  /**
-   * Move logic.
-   */
-  public void move() {
-    int tempX = x;
-    int tempY = y;
-    switch (direction) {
-      case 0:
-        tempY = y + velocity;
-        break;
-      case 1:
-        tempY = y - velocity;
-        break;
-      case 2:
-        tempX = x - velocity;
-        break;
-      case 3:
-        tempX = x + velocity;
-        break;
-      default:
-        break;
-    }
-
-    for (int i = 0; i < 4; i++) {
-      int xx = tempX + AddToXToCheckCollision[i];
-      int yy = tempY + AddToYToCheckCollision[i];
-      if (!canMove(xx, yy)) {
-        setDirection(moveType.setDirection(direction));
-        return;
-      }
-    }
-
-    this.setX(tempX);
-    this.setY(tempY);
-  }
-
-  @Override
-  public void update() {
-
-    if (!isAlive) {
-      deadAnimation();
-    } else {
-      move();
-      animate();
-      ifCollideWithPowerupOrFlame();
-      if (direction == 0) {
-        this.setImg(GameSprite.movingSprite(GameSprite.kondoriaLeft1, GameSprite.kondoriaLeft2,
-                GameSprite.kondoriaLeft3, animation, timeTransfer).getFxImage());
-      } else if (direction == 1) {
-        this.setImg(GameSprite.movingSprite(GameSprite.kondoriaRight1, GameSprite.kondoriaRight2,
-                GameSprite.kondoriaRight3, animation, timeTransfer).getFxImage());
-      } else if (direction == 2) {
-        this.setImg(GameSprite.movingSprite(GameSprite.kondoriaLeft1, GameSprite.kondoriaRight1,
-                GameSprite.kondoriaLeft3, animation, timeTransfer).getFxImage());
-      } else if (direction == 3) {
-        this.setImg(GameSprite.movingSprite(GameSprite.kondoriaRight1, GameSprite.kondoriaLeft2,
-                GameSprite.kondoriaRight2, animation, timeTransfer).getFxImage());
-      }
-
-    }
-  }
-
-  @Override
-  public void deadAnimation() {
-    // TODO Auto-generated method stub
-    if (timeDead-- > 0) {
-      this.setImg(GameSprite.movingSprite(GameSprite.kondoriaDead, GameSprite.mobDead11, GameSprite.mobDead12,
-          animation, timeTransfer).getFxImage());
-    } else {
-      this.removeFromGame();
-    }
-  }
-
-}
Index: ../BomberMan1.0/src/main/java/GameSprite/GameSprite.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GameSprite/GameSprite.java b/../BomberMan1.0/src/main/java/GameSprite/GameSprite.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GameSprite/GameSprite.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,472 +0,0 @@
-package GameSprite;
-
-import javafx.scene.image.Image;
-import javafx.scene.image.ImageView;
-import javafx.scene.image.PixelReader;
-import javafx.scene.image.PixelWriter;
-import javafx.scene.image.WritableImage;
-import GameSprite.GameSpriteSheet;
-
-public class GameSprite {
-    public static final int DEFAULT_SIZE = 16;
-    public static final int SCALED_SIZE = DEFAULT_SIZE * 2;
-    public static final int TRANSPARENT_COLOR = 0xffff00ff;
-    public int size;
-    private int x;
-    private int y;
-    private int[] pixels;
-    protected int realWidth;
-    protected int realHeight;
-    private GameSpriteSheet gameSpriteSheet;
-
-    public static final GameSprite grass = new GameSprite(DEFAULT_SIZE, 6, 0, 16, 16,GameSpriteSheet.tiles);
-    public static final GameSprite brick = new GameSprite(DEFAULT_SIZE, 7, 0, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite wall = new GameSprite(DEFAULT_SIZE, 5, 0, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite portal = new GameSprite(DEFAULT_SIZE, 4, 0, 14, 14, GameSpriteSheet.tiles);
-
-    /*
-     * New sprites for every level
-     */
-    public static final GameSprite grass1 =
-            new GameSprite(DEFAULT_SIZE, 0, 0, 32, 32, GameSpriteSheet.newtiles);
-    public static final GameSprite wall1 = new GameSprite(DEFAULT_SIZE, 1, 0, 32, 32, GameSpriteSheet.newtiles);
-    public static final GameSprite brick1 =
-            new GameSprite(DEFAULT_SIZE, 2, 0, 32, 32, GameSpriteSheet.newtiles);
-
-    public static final GameSprite grass2 =
-            new GameSprite(DEFAULT_SIZE, 0, 1, 32, 32, GameSpriteSheet.newtiles);
-    public static final GameSprite wall2 = new GameSprite(DEFAULT_SIZE, 1, 1, 32, 32, GameSpriteSheet.newtiles);
-    public static final GameSprite brick2 =
-            new GameSprite(DEFAULT_SIZE, 2, 1, 32, 32, GameSpriteSheet.newtiles);
-
-    public static final GameSprite grass3 =
-            new GameSprite(DEFAULT_SIZE, 0, 2, 32, 32, GameSpriteSheet.newtiles);
-    public static final GameSprite wall3 = new GameSprite(DEFAULT_SIZE, 1, 2, 32, 32, GameSpriteSheet.newtiles);
-    public static final GameSprite brick3 =
-            new GameSprite(DEFAULT_SIZE, 2, 2, 32, 32, GameSpriteSheet.newtiles);
-
-    public static final GameSprite grass4 =
-            new GameSprite(DEFAULT_SIZE, 0, 3, 32, 32, GameSpriteSheet.newtiles);
-    public static final GameSprite wall4 = new GameSprite(DEFAULT_SIZE, 1, 3, 32, 32, GameSpriteSheet.newtiles);
-    public static final GameSprite brick4 =
-            new GameSprite(DEFAULT_SIZE, 2, 3, 32, 32, GameSpriteSheet.newtiles);
-
-    public static final GameSprite grass5 =
-            new GameSprite(DEFAULT_SIZE, 0, 4, 32, 32, GameSpriteSheet.newtiles);
-    public static final GameSprite wall5 = new GameSprite(DEFAULT_SIZE, 1, 4, 32, 32, GameSpriteSheet.newtiles);
-    public static final GameSprite brick5 =
-            new GameSprite(DEFAULT_SIZE, 2, 4, 32, 32, GameSpriteSheet.newtiles);
-
-    public static final GameSprite grass6 =
-            new GameSprite(DEFAULT_SIZE, 0, 5, 32, 32, GameSpriteSheet.newtiles);
-    public static final GameSprite wall6 = new GameSprite(DEFAULT_SIZE, 1, 5, 32, 32, GameSpriteSheet.newtiles);
-    public static final GameSprite brick6 =
-            new GameSprite(DEFAULT_SIZE, 2, 5, 32, 32, GameSpriteSheet.newtiles);
-
-    public static final GameSprite grass7 =
-            new GameSprite(DEFAULT_SIZE, 3, 0, 32, 32, GameSpriteSheet.newtiles);
-    public static final GameSprite wall7 = new GameSprite(DEFAULT_SIZE, 4, 0, 32, 32, GameSpriteSheet.newtiles);
-    public static final GameSprite brick7 =
-            new GameSprite(DEFAULT_SIZE, 5, 0, 32, 32, GameSpriteSheet.newtiles);
-
-    /*
-     * Bomb Sprites
-     */
-    public static final GameSprite bomb = new GameSprite(DEFAULT_SIZE, 0, 3, 15, 15, GameSpriteSheet.tiles);
-    public static final GameSprite bomb1 = new GameSprite(DEFAULT_SIZE, 1, 3, 13, 15, GameSpriteSheet.tiles);
-    public static final GameSprite bomb2 = new GameSprite(DEFAULT_SIZE, 2, 3, 12, 14, GameSpriteSheet.tiles);
-
-    /*
-     * FlameSegment Sprites
-     */
-    public static final GameSprite bombExploded =
-            new GameSprite(DEFAULT_SIZE, 0, 4, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite bombExploded1 =
-            new GameSprite(DEFAULT_SIZE, 0, 5, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite bombExploded2 =
-            new GameSprite(DEFAULT_SIZE, 0, 6, 16, 16, GameSpriteSheet.tiles);
-
-    public static final GameSprite explosionVertical =
-            new GameSprite(DEFAULT_SIZE, 1, 5, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite explosionVertical1 =
-            new GameSprite(DEFAULT_SIZE, 2, 5, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite explosionVertical2 =
-            new GameSprite(DEFAULT_SIZE, 3, 5, 16, 16, GameSpriteSheet.tiles);
-
-    public static final GameSprite explosionHorizontal =
-            new GameSprite(DEFAULT_SIZE, 1, 7, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite explosionHorizontal1 =
-            new GameSprite(DEFAULT_SIZE, 1, 8, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite explosionHorizontal2 =
-            new GameSprite(DEFAULT_SIZE, 1, 9, 16, 16, GameSpriteSheet.tiles);
-
-    public static final GameSprite explosionHorizontalLeftLast =
-            new GameSprite(DEFAULT_SIZE, 0, 7, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite explosionHorizontalLeftLast1 =
-            new GameSprite(DEFAULT_SIZE, 0, 8, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite explosionHorizontalLeftLast2 =
-            new GameSprite(DEFAULT_SIZE, 0, 9, 16, 16, GameSpriteSheet.tiles);
-
-    public static final GameSprite explosionHorizontalRightLast =
-            new GameSprite(DEFAULT_SIZE, 2, 7, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite explosionHorizontalRightLast1 =
-            new GameSprite(DEFAULT_SIZE, 2, 8, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite explosionHorizontalRightLast2 =
-            new GameSprite(DEFAULT_SIZE, 2, 9, 16, 16, GameSpriteSheet.tiles);
-
-    public static final GameSprite explosionVerticalTopLast =
-            new GameSprite(DEFAULT_SIZE, 1, 4, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite explosionVerticalTopLast1 =
-            new GameSprite(DEFAULT_SIZE, 2, 4, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite explosionVerticalTopLast2 =
-            new GameSprite(DEFAULT_SIZE, 3, 4, 16, 16, GameSpriteSheet.tiles);
-
-    public static final GameSprite explosionVerticalDownLast =
-            new GameSprite(DEFAULT_SIZE, 1, 6, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite explosionVerticalDownLast1 =
-            new GameSprite(DEFAULT_SIZE, 2, 6, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite explosionVerticalDownLast2 =
-            new GameSprite(DEFAULT_SIZE, 3, 6, 16, 16, GameSpriteSheet.tiles);
-    /*
-     * Bomber Sprites
-     */
-    public static final GameSprite playerUp = new GameSprite(DEFAULT_SIZE, 0, 0, 12, 16, GameSpriteSheet.tiles);
-    public static final GameSprite playerDown =
-            new GameSprite(DEFAULT_SIZE, 2, 0, 12, 15, GameSpriteSheet.tiles);
-    public static final GameSprite playerLeft =
-            new GameSprite(DEFAULT_SIZE, 3, 0, 10, 15, GameSpriteSheet.tiles);
-    public static final GameSprite playerRight =
-            new GameSprite(DEFAULT_SIZE, 1, 0, 10, 16, GameSpriteSheet.tiles);
-
-    public static final GameSprite playerUp1 =
-            new GameSprite(DEFAULT_SIZE, 0, 1, 12, 16, GameSpriteSheet.tiles);
-    public static final GameSprite playerUp2 =
-            new GameSprite(DEFAULT_SIZE, 0, 2, 12, 15, GameSpriteSheet.tiles);
-
-    public static final GameSprite playerDown1 =
-            new GameSprite(DEFAULT_SIZE, 2, 1, 12, 15, GameSpriteSheet.tiles);
-    public static final GameSprite playerDown2 =
-            new GameSprite(DEFAULT_SIZE, 2, 2, 12, 16, GameSpriteSheet.tiles);
-
-    public static final GameSprite playerLeft1 =
-            new GameSprite(DEFAULT_SIZE, 3, 1, 11, 16, GameSpriteSheet.tiles);
-    public static final GameSprite playerLeft2 =
-            new GameSprite(DEFAULT_SIZE, 3, 2, 12, 16, GameSpriteSheet.tiles);
-
-    public static final GameSprite playerRight1 =
-            new GameSprite(DEFAULT_SIZE, 1, 1, 11, 16, GameSpriteSheet.tiles);
-    public static final GameSprite playerRight2 =
-            new GameSprite(DEFAULT_SIZE, 1, 2, 12, 16, GameSpriteSheet.tiles);
-
-    public static final GameSprite playerDead1 =
-            new GameSprite(DEFAULT_SIZE, 4, 2, 14, 16, GameSpriteSheet.tiles);
-    public static final GameSprite playerDead2 =
-            new GameSprite(DEFAULT_SIZE, 5, 2, 13, 15, GameSpriteSheet.tiles);
-    public static final GameSprite playerDead3 =
-            new GameSprite(DEFAULT_SIZE, 6, 2, 16, 16, GameSpriteSheet.tiles);
-
-    /*
-     * Brick FlameSegment
-     */
-    public static final GameSprite brickExploded =
-            new GameSprite(DEFAULT_SIZE, 7, 1, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite brickExploded1 =
-            new GameSprite(DEFAULT_SIZE, 7, 2, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite brickExploded2 =
-            new GameSprite(DEFAULT_SIZE, 7, 3, 16, 16, GameSpriteSheet.tiles);
-
-    /*
-     * Powerups
-     */
-    public static final GameSprite powerupBombs =
-            new GameSprite(DEFAULT_SIZE, 0, 10, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite powerupFlames =
-            new GameSprite(DEFAULT_SIZE, 1, 10, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite powerupSpeed =
-            new GameSprite(DEFAULT_SIZE, 2, 10, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite powerupWallpass =
-            new GameSprite(DEFAULT_SIZE, 3, 10, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite powerupDetonator =
-            new GameSprite(DEFAULT_SIZE, 4, 10, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite powerupBombpass =
-            new GameSprite(DEFAULT_SIZE, 5, 10, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite powerupFlamepass =
-            new GameSprite(DEFAULT_SIZE, 6, 10, 16, 16, GameSpriteSheet.tiles);
-
-    /*
-     * Characters
-     */
-    // BALLOM
-    public static final GameSprite balloomLeft1 =
-            new GameSprite(DEFAULT_SIZE, 9, 0, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite balloomLeft2 =
-            new GameSprite(DEFAULT_SIZE, 9, 1, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite balloomLeft3 =
-            new GameSprite(DEFAULT_SIZE, 9, 2, 16, 16, GameSpriteSheet.tiles);
-
-    public static final GameSprite balloomRight1 =
-            new GameSprite(DEFAULT_SIZE, 10, 0, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite balloomRight2 =
-            new GameSprite(DEFAULT_SIZE, 10, 1, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite balloomRight3 =
-            new GameSprite(DEFAULT_SIZE, 10, 2, 16, 16, GameSpriteSheet.tiles);
-
-    public static final GameSprite balloomDead =
-            new GameSprite(DEFAULT_SIZE, 9, 3, 16, 16, GameSpriteSheet.tiles);
-
-    // ONEAL
-    public static final GameSprite onealLeft1 =
-            new GameSprite(DEFAULT_SIZE, 11, 0, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite onealLeft2 =
-            new GameSprite(DEFAULT_SIZE, 11, 1, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite onealLeft3 =
-            new GameSprite(DEFAULT_SIZE, 11, 2, 16, 16, GameSpriteSheet.tiles);
-
-    public static final GameSprite onealRight1 =
-            new GameSprite(DEFAULT_SIZE, 12, 0, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite onealRight2 =
-            new GameSprite(DEFAULT_SIZE, 12, 1, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite onealRight3 =
-            new GameSprite(DEFAULT_SIZE, 12, 2, 16, 16, GameSpriteSheet.tiles);
-
-    public static final GameSprite onealDead =
-            new GameSprite(DEFAULT_SIZE, 11, 3, 16, 16, GameSpriteSheet.tiles);
-
-    // Doll
-    public static final GameSprite dollLeft1 =
-            new GameSprite(DEFAULT_SIZE, 13, 0, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite dollLeft2 =
-            new GameSprite(DEFAULT_SIZE, 13, 1, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite dollLeft3 =
-            new GameSprite(DEFAULT_SIZE, 13, 2, 16, 16, GameSpriteSheet.tiles);
-
-    public static final GameSprite dollRight1 =
-            new GameSprite(DEFAULT_SIZE, 14, 0, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite dollRight2 =
-            new GameSprite(DEFAULT_SIZE, 14, 1, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite dollRight3 =
-            new GameSprite(DEFAULT_SIZE, 14, 2, 16, 16, GameSpriteSheet.tiles);
-
-    public static final GameSprite dolllDead =
-            new GameSprite(DEFAULT_SIZE, 13, 3, 16, 16, GameSpriteSheet.tiles);
-
-    // Minvo
-    public static final GameSprite minvoLeft1 =
-            new GameSprite(DEFAULT_SIZE, 8, 5, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite minvoLeft2 =
-            new GameSprite(DEFAULT_SIZE, 8, 6, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite minvoLeft3 =
-            new GameSprite(DEFAULT_SIZE, 8, 7, 16, 16, GameSpriteSheet.tiles);
-
-    public static final GameSprite minvoRight1 =
-            new GameSprite(DEFAULT_SIZE, 9, 5, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite minvoRight2 =
-            new GameSprite(DEFAULT_SIZE, 9, 6, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite minvoRight3 =
-            new GameSprite(DEFAULT_SIZE, 9, 7, 16, 16, GameSpriteSheet.tiles);
-
-    public static final GameSprite minvoDead =
-            new GameSprite(DEFAULT_SIZE, 8, 8, 16, 16, GameSpriteSheet.tiles);
-
-    // Kondoria
-    public static final GameSprite kondoriaLeft1 =
-            new GameSprite(DEFAULT_SIZE, 10, 5, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite kondoriaLeft2 =
-            new GameSprite(DEFAULT_SIZE, 10, 6, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite kondoriaLeft3 =
-            new GameSprite(DEFAULT_SIZE, 10, 7, 16, 16, GameSpriteSheet.tiles);
-
-    public static final GameSprite kondoriaRight1 =
-            new GameSprite(DEFAULT_SIZE, 11, 5, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite kondoriaRight2 =
-            new GameSprite(DEFAULT_SIZE, 11, 6, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite kondoriaRight3 =
-            new GameSprite(DEFAULT_SIZE, 11, 7, 16, 16, GameSpriteSheet.tiles);
-
-    public static final GameSprite kondoriaDead =
-            new GameSprite(DEFAULT_SIZE, 10, 8, 16, 16, GameSpriteSheet.tiles);
-
-    // Phoenix monster.
-    public static GameSprite phoenixDown1 = new GameSprite(DEFAULT_SIZE, 0, 0, 16, 16, GameSpriteSheet.phoenix);
-    public static GameSprite phoenixDown2 = new GameSprite(DEFAULT_SIZE, 1, 0, 16, 16, GameSpriteSheet.phoenix);
-    public static GameSprite phoenixDown3 = new GameSprite(DEFAULT_SIZE, 2, 0, 16, 16, GameSpriteSheet.phoenix);
-    public static GameSprite phoenixDown4 = new GameSprite(DEFAULT_SIZE, 3, 0, 16, 16, GameSpriteSheet.phoenix);
-
-    public static GameSprite phoenixUp1 = new GameSprite(DEFAULT_SIZE, 0, 3, 16, 16, GameSpriteSheet.phoenix);
-    public static GameSprite phoenixUp2 = new GameSprite(DEFAULT_SIZE, 1, 3, 16, 16, GameSpriteSheet.phoenix);
-    public static GameSprite phoenixUp3 = new GameSprite(DEFAULT_SIZE, 2, 3, 16, 16, GameSpriteSheet.phoenix);
-    public static GameSprite phoenixUp4 = new GameSprite(DEFAULT_SIZE, 3, 3, 16, 16, GameSpriteSheet.phoenix);
-
-    public static GameSprite phoenixRight1 =
-            new GameSprite(DEFAULT_SIZE, 0, 2, 16, 16, GameSpriteSheet.phoenix);
-    public static GameSprite phoenixRight2 =
-            new GameSprite(DEFAULT_SIZE, 1, 2, 16, 16, GameSpriteSheet.phoenix);
-    public static GameSprite phoenixRight3 =
-            new GameSprite(DEFAULT_SIZE, 2, 2, 16, 16, GameSpriteSheet.phoenix);
-    public static GameSprite phoenixRight4 =
-            new GameSprite(DEFAULT_SIZE, 3, 2, 16, 16, GameSpriteSheet.phoenix);
-
-    public static GameSprite phoenixLeft1 = new GameSprite(DEFAULT_SIZE, 0, 1, 16, 16, GameSpriteSheet.phoenix);
-    public static GameSprite phoenixLeft2 = new GameSprite(DEFAULT_SIZE, 1, 1, 16, 16, GameSpriteSheet.phoenix);
-    public static GameSprite phoenixLeft3 = new GameSprite(DEFAULT_SIZE, 2, 1, 16, 16, GameSpriteSheet.phoenix);
-    public static GameSprite phoenixLeft4 = new GameSprite(DEFAULT_SIZE, 3, 1, 16, 16, GameSpriteSheet.phoenix);
-
-    // dragon monster.
-    public static GameSprite dragonDown1 = new GameSprite(DEFAULT_SIZE, 0, 0, 16, 16, GameSpriteSheet.dragon);
-    public static GameSprite dragonDown2 = new GameSprite(DEFAULT_SIZE, 1, 0, 16, 16, GameSpriteSheet.dragon);
-    public static GameSprite dragonDown3 = new GameSprite(DEFAULT_SIZE, 2, 0, 16, 16, GameSpriteSheet.dragon);
-    public static GameSprite dragonDown4 = new GameSprite(DEFAULT_SIZE, 3, 0, 16, 16, GameSpriteSheet.dragon);
-
-    public static GameSprite dragonUp1 = new GameSprite(DEFAULT_SIZE, 0, 3, 16, 16, GameSpriteSheet.dragon);
-    public static GameSprite dragonUp2 = new GameSprite(DEFAULT_SIZE, 1, 3, 16, 16, GameSpriteSheet.dragon);
-    public static GameSprite dragonUp3 = new GameSprite(DEFAULT_SIZE, 2, 3, 16, 16, GameSpriteSheet.dragon);
-    public static GameSprite dragonUp4 = new GameSprite(DEFAULT_SIZE, 3, 3, 16, 16, GameSpriteSheet.dragon);
-
-    public static GameSprite dragonRight1 = new GameSprite(DEFAULT_SIZE, 0, 2, 16, 16, GameSpriteSheet.dragon);
-    public static GameSprite dragonRight2 = new GameSprite(DEFAULT_SIZE, 1, 2, 16, 16, GameSpriteSheet.dragon);
-    public static GameSprite dragonRight3 = new GameSprite(DEFAULT_SIZE, 2, 2, 16, 16, GameSpriteSheet.dragon);
-    public static GameSprite dragonRight4 = new GameSprite(DEFAULT_SIZE, 3, 2, 16, 16, GameSpriteSheet.dragon);
-
-    public static GameSprite dragonLeft1 = new GameSprite(DEFAULT_SIZE, 0, 1, 16, 16, GameSpriteSheet.dragon);
-    public static GameSprite dragonLeft2 = new GameSprite(DEFAULT_SIZE, 1, 1, 16, 16, GameSpriteSheet.dragon);
-    public static GameSprite dragonLeft3 = new GameSprite(DEFAULT_SIZE, 2, 1, 16, 16, GameSpriteSheet.dragon);
-    public static GameSprite dragonLeft4 = new GameSprite(DEFAULT_SIZE, 3, 1, 16, 16, GameSpriteSheet.dragon);
-
-    public static GameSprite fire1 = new GameSprite(DEFAULT_SIZE, 0, 0,  16, 16, GameSpriteSheet.dragon);
-    public static GameSprite fire2 = new GameSprite(DEFAULT_SIZE, 1, 0, 16, 16, GameSpriteSheet.dragon);
-    public static GameSprite fire3 = new GameSprite(DEFAULT_SIZE, 2, 0, 16, 16, GameSpriteSheet.dragon);
-
-    // bat monster.
-    public static GameSprite batDown1 = new GameSprite(DEFAULT_SIZE, 0, 0, 16, 16, GameSpriteSheet.batMonster);
-    public static GameSprite batDown2 = new GameSprite(DEFAULT_SIZE, 1, 0, 16, 16, GameSpriteSheet.batMonster);
-    public static GameSprite batDown3 = new GameSprite(DEFAULT_SIZE, 2, 0, 16, 16, GameSpriteSheet.batMonster);
-    public static GameSprite batDown4 = new GameSprite(DEFAULT_SIZE, 3, 0, 16, 16, GameSpriteSheet.batMonster);
-
-    public static GameSprite batUp1 = new GameSprite(DEFAULT_SIZE, 0, 3, 16, 16, GameSpriteSheet.batMonster);
-    public static GameSprite batUp2 = new GameSprite(DEFAULT_SIZE, 1, 3, 16, 16, GameSpriteSheet.batMonster);
-    public static GameSprite batUp3 = new GameSprite(DEFAULT_SIZE, 2, 3, 16, 16, GameSpriteSheet.batMonster);
-    public static GameSprite batUp4 = new GameSprite(DEFAULT_SIZE, 3, 3, 16, 16, GameSpriteSheet.batMonster);
-
-    public static GameSprite batRight1 = new GameSprite(DEFAULT_SIZE, 0, 1, 16, 16, GameSpriteSheet.batMonster);
-    public static GameSprite batRight2 = new GameSprite(DEFAULT_SIZE, 1, 1, 16, 16, GameSpriteSheet.batMonster);
-    public static GameSprite batRight3 = new GameSprite(DEFAULT_SIZE, 2, 1, 16, 16, GameSpriteSheet.batMonster);
-    public static GameSprite batRight4 = new GameSprite(DEFAULT_SIZE, 3, 1, 16, 16, GameSpriteSheet.batMonster);
-
-    public static GameSprite batLeft1 = new GameSprite(DEFAULT_SIZE, 0, 2, 16, 16, GameSpriteSheet.batMonster);
-    public static GameSprite batLeft2 = new GameSprite(DEFAULT_SIZE, 1, 2, 16, 16, GameSpriteSheet.batMonster);
-    public static GameSprite batLeft3 = new GameSprite(DEFAULT_SIZE, 2, 2, 16, 16, GameSpriteSheet.batMonster);
-    public static GameSprite batLeft4 = new GameSprite(DEFAULT_SIZE, 3, 2, 16, 16, GameSpriteSheet.batMonster);
-
-    // ALL
-    public static final GameSprite mobDead11 =
-            new GameSprite(DEFAULT_SIZE, 15, 0,16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite mobDead12 =
-            new GameSprite(DEFAULT_SIZE, 15, 1, 16, 16, GameSpriteSheet.tiles);
-    public static final GameSprite mobDead13 =
-            new GameSprite(DEFAULT_SIZE, 15, 2, 16, 16, GameSpriteSheet.tiles);
-
-    public GameSprite(int size, int x, int y, int realWidth, int realHeight, GameSpriteSheet gameSpriteSheet) {
-        this.size = size;
-        this.x = x;
-        this.y = y;
-        pixels = new int[this.size * this.size];
-        this.realWidth = realWidth;
-        this.realHeight = realHeight;
-        this.gameSpriteSheet = gameSpriteSheet;
-        load();
-    }
-
-    public GameSprite(int size, int color) {
-        this.size = size;
-        pixels = new int[this.size * this.size];
-        setColor(color);
-    }
-
-    private void load() {
-        for(int i = 0; i < size; i++){
-            for(int j = 0; j < size; j++){
-                pixels[j+i*size] = gameSpriteSheet.pixels[(j + x) + (i +y)* gameSpriteSheet.size];
-            }
-        }
-    }
-
-    private void setColor(int color) {
-        for (int i = 0; i < pixels.length; i++) {
-            pixels[i] = color;
-        }
-    }
-
-    /**
-     * Animate the sprite.
-     *
-     * @param time Time of the animation
-     * @return Final sprite at new position
-     */
-    public static final GameSprite  movingSprite(GameSprite  normal, GameSprite  x1, GameSprite  x2, int animate,
-            int time) {
-        int calc = animate % time;
-        int diff = time / 3;
-
-        if (calc < diff) {
-            return normal;
-        }
-
-        if (calc < diff * 2) {
-            return x1;
-        }
-
-        return x2;
-    }
-
-    public static final GameSprite movingSprite(GameSprite  x1, GameSprite  x2, int animate, int time) {
-        int diff = time / 2;
-        return (animate % time > diff) ? x1 : x2;
-    }
-
-    public int getSize() {
-        return size;
-    }
-
-    public int getPixels(int i) {
-        return pixels[i];
-    }
-
-    public Image getFxImage() {
-        WritableImage wr = new WritableImage(size, size);
-        PixelWriter pw = wr.getPixelWriter();
-        for (int i = 0; i < size; i++) {
-            for (int j = 0; j < size; j++) {
-                if (pixels[i + j * size] == TRANSPARENT_COLOR) {
-                    pw.setArgb(i, j, 0);
-                } else {
-                    pw.setArgb(i, j, pixels[i + j * size]);
-                }
-            }
-        }
-        Image input = new ImageView(wr).getImage();
-        return resample(input, SCALED_SIZE / DEFAULT_SIZE);
-    }
-
-    private Image resample(Image input, int scaleFactor) {
-        final int W = (int) input.getWidth();
-        final int H = (int) input.getHeight();
-        final int S = scaleFactor;
-
-        WritableImage output = new WritableImage(W * S, H * S);
-
-        PixelReader reader = input.getPixelReader();
-        PixelWriter writer = output.getPixelWriter();
-
-        for (int i = 0; i < H; i++) {
-            for (int j = 0; j < W; j++) {
-                final int argb = reader.getArgb(j, i);
-                for (int dy = 0; dy < S; dy++) {
-                    for (int dx = 0; dx < S; dx++) {
-                        writer.setArgb(j * S + dx, i * S + dy, argb);
-                    }
-                }
-            }
-        }
-        return output;
-    }
-}
Index: ../BomberMan1.0/src/resources/levels/Level2.txt
===================================================================
diff --git a/../BomberMan1.0/src/resources/levels/Level2.txt b/../BomberMan1.0/src/resources/levels/Level2.txt
deleted file mode 100644
--- a/../BomberMan1.0/src/resources/levels/Level2.txt	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,48 +0,0 @@
-2 13 31
-###############################
-#p      * x  ***   1  *       #
-# # # #*# # # #*# # # # # # #*#
-#*      *  1s**        ***    #
-#b### #*#*#*#x#*#*#*#*#*# ###*#
-#   # #*f   2     W     # #   #
-#*### #*#*#*#*#*#*#*#*#*# ###*#
-#        *#     *     #       #
-#*# # # #*#l#s#*# # # # # # #*#
-#        2#   *     * #  **   #
-#*# # #*#*# # # # # # # # #*#*#
-#       F  **   *  1  **     x#
-###############################
-
-
-Mô tả cấu trúc tệp cấu hình màn chơi:
-1/ Dòng đầu tiên bao gồm 3 số nguyên L, R, C:
-L - số thứ tự màn chơi
-R - số hàng của bản đồ
-C - số cột của bản đồ
-
-2/ R dòng tiếp theo, mỗi dòng có C kí tự. Mỗi kí tự đại diện cho một đối tượng trên bản đồ:
-Tiles:
-# - Wall
-* - Brick
-x - Portal
-
-Character:
-p - Bomber
-1 - Balloon
-2 - Oneal
-3 - Doll
-4 - Minvo
-5 - Kondonria
-6 - Dragon
-7 - batMonster
-8 - Phoenix
-Items:
-b - Bomb Item
-f - Flame Item
-s - Speed Item
-B - Bomb Pass Item
-F - Flame Pass Item
-W - Brick Pass Item
-l - Plus 1 live
-
-Kí tự khác các kí tự trên - Grass
Index: ../README.md
===================================================================
diff --git a/../README.md b/../README.md
deleted file mode 100644
--- a/../README.md	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,1 +0,0 @@
-# BomberManGame_Team06_1.0
\ No newline at end of file
Index: ../BomberMan1.0/src/main/java/GameMapEntity/EntityObject/Wall.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GameMapEntity/EntityObject/Wall.java b/../BomberMan1.0/src/main/java/GameMapEntity/EntityObject/Wall.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GameMapEntity/EntityObject/Wall.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,24 +0,0 @@
-package GameMapEntity.EntityObject;
-
-import GameMapEntity.GameEntity;
-import GameSprite.GameSprite;
-import javafx.scene.image.Image;
-import java.awt.*;
-
-public class Wall extends GameEntity{
-
-    private GameSprite[] sprites = {GameSprite.wall1, GameSprite.wall2, GameSprite.wall3,GameSprite.wall4, GameSprite.wall5,
-            GameSprite.wall6, GameSprite.wall7};
-
-    public Wall(int x, int y, int level) {
-        super(x, y, null);
-        img = sprites[level].getFxImage();
-    }
-
-    public Wall(int x, int y, Image image) {
-        super(x, y, image);
-    }
-
-    @Override
-    public void update() {}
-}
Index: ../BomberMan1.0/src/main/java/GameMapEntity/GameEntity.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GameMapEntity/GameEntity.java b/../BomberMan1.0/src/main/java/GameMapEntity/GameEntity.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GameMapEntity/GameEntity.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,67 +0,0 @@
-package GameMapEntity;
-
-import javafx.scene.canvas.GraphicsContext;
-import javafx.scene.image.Image;
-import GameSprite.GameSprite;
-
-public abstract class GameEntity {
-    // Tọa độ X tính từ góc trái trên trong Canvas
-    protected int x;
-
-    // Tọa độ Y tính từ góc trái trên trong Canvas
-    protected int y;
-
-    protected Image img;
-
-    /**
-     * Khởi tạo đối tượng, chuyển từ tọa độ đơn vị sang tọa độ trong canvas.
-     */
-    public GameEntity(int xUnit, int yUnit, Image img) {
-        x = xUnit * GameSprite.SCALED_SIZE;
-        y = yUnit * GameSprite.SCALED_SIZE;
-        this.img = img;
-    }
-
-    public void render(GraphicsContext gc) {
-        gc.drawImage(img, x, y);
-    }
-
-    public abstract void update();
-
-    public int getXUnit() {
-        return (x + GameSprite.DEFAULT_SIZE) / GameSprite.SCALED_SIZE;
-    }
-
-    public int getYUnit() {
-        return (y + GameSprite.DEFAULT_SIZE) / GameSprite.SCALED_SIZE;
-    }
-
-    public void setImg(Image img) {
-        this.img = img;
-    }
-
-    public Image getImg() {
-        return img;
-    }
-
-    public void removeFromGame() {
-        this.setImg(null);
-    }
-
-
-    public int getX() {
-        return x;
-    }
-
-    public void setX(int x) {
-        this.x = x;
-    }
-
-    public int getY() {
-        return y;
-    }
-
-    public void setY(int y) {
-        this.y = y;
-    }
-}
Index: ../BomberMan1.0/src/main/java/GameMonster/moveMethod/moveType2.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GameMonster/moveMethod/moveType2.java b/../BomberMan1.0/src/main/java/GameMonster/moveMethod/moveType2.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GameMonster/moveMethod/moveType2.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,13 +0,0 @@
-package GameMonster.moveMethod;
-
-public class moveType2 extends MonsterMovement {
-
-  // public static boolean changeDirect = false;
-
-  @Override
-  public int setDirection(int d) {
-    // Auto-generated method stub
-    return randomdirect.nextInt(4);
-  }
-
-}
Index: ../.idea/codeStyles/Project.xml
===================================================================
diff --git a/../.idea/codeStyles/Project.xml b/../.idea/codeStyles/Project.xml
deleted file mode 100644
--- a/../.idea/codeStyles/Project.xml	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,7 +0,0 @@
-<component name="ProjectCodeStyleConfiguration">
-  <code_scheme name="Project" version="173">
-    <ScalaCodeStyleSettings>
-      <option name="MULTILINE_STRING_CLOSING_QUOTES_ON_NEW_LINE" value="true" />
-    </ScalaCodeStyleSettings>
-  </code_scheme>
-</component>
\ No newline at end of file
Index: ../BomberMan1.0/src/resources/highscore/highscore.txt
===================================================================
diff --git a/../BomberMan1.0/src/resources/highscore/highscore.txt b/../BomberMan1.0/src/resources/highscore/highscore.txt
deleted file mode 100644
--- a/../BomberMan1.0/src/resources/highscore/highscore.txt	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,1 +0,0 @@
-0
\ No newline at end of file
Index: ../BomberMan1.0/src/main/java/GameSound/GameSound.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GameSound/GameSound.java b/../BomberMan1.0/src/main/java/GameSound/GameSound.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GameSound/GameSound.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,125 +0,0 @@
-package GameSound;
-
-
-import javax.sound.sampled.AudioInputStream;
-import javax.sound.sampled.AudioSystem;
-import javax.sound.sampled.Clip;
-import javax.sound.sampled.FloatControl;
-import javax.sound.sampled.LineUnavailableException;
-import javax.sound.sampled.UnsupportedAudioFileException;
-import java.io.File;
-import java.io.IOException;
-
-import Main.BomberManGame;
-
-public class GameSound {
-    public static final String GAME_SOUND = "src/resources/sounds//gameOver.wav";
-    public static final String TRANSFER_LEVEL_SOUND = "src/resources/sounds//gameOver.wav";
-    public static final String EAT_POWERUP_SOUND ="src/resources/sounds//gameOver.wav";
-    public static final String MENU_SOUND = "src/resources/sounds//Backgound.wav";
-    public static final String EXPLOSION_SOUND = "src/resources/sounds//gameOver.wav";
-    public static final String DEAD_SOUND = "src/resources/sounds//gameOver.wav";
-    public static final String LOSE_GAME_SOUND ="src/resources/sounds//gameOver.wav";
-    public static final String WIN_GAME_SOUND = "src/resources/sounds//gameOver.wav";
-    public static final String MOVING_SOUND = "src/resources/sounds//gameOver.wav";
-    public static final String PLACE_BOMB_SOUND = "src/resources/sounds//gameOver.wav";
-
-    private String path;
-    private boolean isRunning = false;
-    Clip clip;
-    private long currentFrame;
-
-    public enum SoundsStatusGame{
-        PLAY,
-        STOP,
-        PAUSE
-    }
-
-    private SoundsStatusGame statusGame;
-
-    public GameSound(String path) {
-        this.path = path;
-        File file = new File(path);
-        try {
-            AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(file);
-            clip = AudioSystem.getClip();
-            clip.open(audioInputStream);
-        }catch (IOException | LineUnavailableException | UnsupportedAudioFileException e) {
-            e.printStackTrace();
-            System.out.println("Sound.Sound()");
-        }
-    }
-
-    /**
-     * Play sound.
-     */
-    public void play_sound() {
-        if (isRunning || BomberManGame.getMuted()) {
-            return;
-        }
-        clip.setFramePosition(0);
-        if (path.equals(GAME_SOUND) || path.equals(MENU_SOUND)) {
-            FloatControl gainControl = (FloatControl) clip.getControl(FloatControl.Type.MASTER_GAIN);
-            gainControl.setValue(-10.0f);
-            clip.loop(Clip.LOOP_CONTINUOUSLY);
-        }
-        if (path.equals(EXPLOSION_SOUND)) {
-            FloatControl gainControl = (FloatControl) clip.getControl(FloatControl.Type.MASTER_GAIN);
-            gainControl.setValue(-20.0f);
-        }
-        clip.start();
-        isRunning = true;
-        statusGame = SoundsStatusGame.PLAY;
-    }
-
-    /**
-     * Stop sound.
-     */
-    public void stop_sound(){
-        clip.stop();
-        isRunning = false;
-        statusGame = SoundsStatusGame.STOP;
-    }
-
-    /**
-     * Pause sound.
-     */
-    public void pause_sound(){
-        clip.stop();
-        isRunning = false;
-        currentFrame = clip.getMicrosecondPosition();
-        statusGame = SoundsStatusGame.PAUSE;
-    }
-
-    /**
-     * Resume sound from pause.
-     */
-    public void resume_sound() {
-        if (statusGame == SoundsStatusGame.PAUSE) {
-            if (isRunning || BomberManGame.getMuted()) {
-                return;
-            }
-            clip.close();
-            File file = new File(path);
-            try {
-                AudioInputStream ais = AudioSystem.getAudioInputStream(file);
-                clip = AudioSystem.getClip();
-                clip.open(ais);
-            } catch (IOException | LineUnavailableException | UnsupportedAudioFileException e) {
-                e.printStackTrace();
-                System.out.println("Sound.Sound()");
-            }
-            if (path.equals(GAME_SOUND) || path.equals(MENU_SOUND)) {
-                clip.loop(Clip.LOOP_CONTINUOUSLY);
-            }
-            clip.setMicrosecondPosition(currentFrame);
-            clip.start();
-            isRunning = true;
-            statusGame = SoundsStatusGame.PLAY;
-        }
-    }
-
-    public boolean isRunning() { return  isRunning;}
-    public void setRunning(boolean running) { isRunning = running;}
-    public SoundsStatusGame getStatusGame() {return statusGame;}
-}
Index: ../BomberMan1.0/src/main/java/Main/BomberManGame.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/Main/BomberManGame.java b/../BomberMan1.0/src/main/java/Main/BomberManGame.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/Main/BomberManGame.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,249 +0,0 @@
-package Main;
-
-import GameSprite.GameSprite;
-import GameMapEntity.GameEntity;
-import GameController.MenuGame;
-import GameController.PauseGame;
-import GameSound.GameSound;
-import GameMapGraphics.GameCanvas;
-import GameMapGraphics.HighScore;
-import GameMapGraphics.GameBase;
-import GameMapGraphics.GameMap;
-
-import javafx.animation.AnimationTimer;
-import javafx.application.Application;
-import javafx.application.Platform;
-import javafx.fxml.FXMLLoader;
-import javafx.scene.Group;
-import javafx.scene.Parent;
-import javafx.scene.Scene;
-import javafx.scene.canvas.Canvas;
-import javafx.scene.canvas.GraphicsContext;
-import javafx.scene.control.Button;
-import javafx.scene.image.Image;
-import javafx.scene.layout.StackPane;
-import javafx.scene.paint.Color;
-import javafx.scene.text.Font;
-import javafx.stage.Stage;
-import org.w3c.dom.Entity;
-
-import java.io.IOException;
-import java.io.FileNotFoundException;
-import java.io.FileInputStream;
-import java.util.ArrayList;
-import java.util.List;
-
-
-
-public class BomberManGame extends Application {
-    public static final int WIDTH = 31; //Width screen
-    public static final int HEIGHT = 14;//Height screen
-
-    private GraphicsContext gc;
-    private static GameCanvas canvas;
-    private MenuGame menuGame;
-    private PauseGame pauseGame;
-
-    private List<GameEntity> stillObject = new ArrayList<>();
-
-    // Status Player
-    public static final int timeLiving = 300;
-    private static int score = 0;
-    private static int lives = 3;
-
-    public boolean showMenu = true;
-    private static boolean mute = false;
-
-    public GameSound menuSound = new GameSound(GameSound.MENU_SOUND);
-
-    @Override
-    public void start(Stage stage) {
-        // Create CanvasGame
-        canvas = new GameCanvas(GameSprite.SCALED_SIZE * WIDTH * 1.0, GameSprite.SCALED_SIZE * HEIGHT * 1.0);
-        gc = canvas.getGraphicsContext2D();
-
-        // Create RootContainer
-        Group root = new Group();
-        root.getChildren().add(canvas);
-
-        stage.setResizable(false);
-        stage.setTitle("Bomberman");
-        Image icon = new Image("src/resources/textures/icon.png");
-        stage.getIcons().add(icon);
-
-        // Create Scene
-        Scene scene = new Scene(root);
-
-        stage.setOnCloseRequest(e -> {
-            Platform.exit();
-            System.exit(0);
-        });
-
-        // Add scene in stage
-        stage.setScene(scene);
-        stage.show();
-
-        menuGame = new MenuGame(canvas.getInput());
-        pauseGame = new PauseGame(canvas.getInput());
-
-        AnimationTimer timer = new AnimationTimer() {
-            @Override
-            public void handle(long l) {
-                if (showMenu) {
-                    canvas.getGameBase().getTimers().setPlay(false);
-                    menuGame.showMenu(gc);
-                    menuGame.update();
-
-                    if (!menuGame.isMuted() && !menuSound.isRunning()) {
-                        menuSound.play_sound();
-                    } else if (menuGame.isMuted()) {
-                        menuSound.stop_sound();
-                    }
-
-                    if (menuGame.isQuit()) {
-                        Platform.exit();
-                        System.exit(0);
-                    } else if (menuGame.showTutorial()) {
-                        renderTutorial(gc);
-                        if (canvas.getInput().backspace) {
-                            showMenu = true;
-                            // System.out.println("Backspace");
-                            menuGame.setShowTutorial(false);
-                        }
-
-                    } else if (menuGame.showHighScore()) {
-                        renderHighScore(gc);
-                        if (canvas.getInput().backspace) {
-                            showMenu = true;
-                            // System.out.println("Backspace");
-                            menuGame.setShowHighScore(false);
-                        }
-                    } else if (menuGame.isStartGame()) {
-                        // create new map at level 1
-                        canvas.getGameBase().createNewGame();
-                        mute = menuGame.isMuted();
-                        menuGame.setStartGame(false);
-                        showMenu = false;
-                        canvas.getGameBase().setTransferLevel(true);
-                    }
-
-
-                } else if (canvas.getInput().pause) {
-                    canvas.getGameBase().getTimers().setPlay(false);
-                    if (!canvas.getGameBase().isPause()) {
-                        canvas.getGameBase().pauseSound();
-                        canvas.getGameBase().setPause(true);
-                    }
-                    pauseGame.showPauseGame(gc);
-                    pauseGame.update();
-
-                    // handle selections while in game pause
-                    if (pauseGame.getSelected() == 2) {
-                        canvas.getInput().pause = false;
-                        canvas.getGameBase().getTimers().setPlay(false);
-                        canvas.getGameBase().pauseSound();
-                        showMenu = true;
-                    } else if (pauseGame.getSelected() == 1) {
-                        canvas.getInput().pause = false;
-                        canvas.getGameBase().resumeSound();
-                        canvas.getGameBase().getTimers().setPlay(true);
-                    }
-                    canvas.getGameBase().setPause(false);
-                    pauseGame.setSelected(-1);
-                } else {
-                    menuSound.stop_sound();
-                    canvas.update();
-                    canvas.render();
-                    if (canvas.getGameBase().isReturnMainMenu()) {
-                        showMenu = true;
-                        canvas.getGameBase().setReturnMainMenu(false);
-                    }
-                    if (canvas.getGameBase().isOver() && canvas.getGameBase().getTimeShowGameOver() == 0) {
-                        canvas.getGameBase().stopSound();
-                        showMenu = true;
-                        canvas.getGameBase().setTimeShowGameOver();
-                        canvas.getGameBase().setReturnMainMenu(false);
-                    }
-                }
-            }
-        };
-        timer.start();
-    }
-
-
-    /**
-     * Create the map.
-     */
-    public void createMap() {
-        canvas.getGameBase().createMap();
-        stillObject.addAll(canvas.getGameBase().getGrassList());
-        stillObject.addAll(canvas.getGameBase().getCollidableEntities());
-    }
-
-    /**
-     * Render game tutorial.
-     */
-    public void renderTutorial(GraphicsContext gc) {
-        FileInputStream file;
-        try {
-            file = new FileInputStream("src/resources/textures/Tutorial.png");
-            final Image backgroundLevel = new Image(file);
-            gc.setFill(Color.WHITE);
-            gc.clearRect(0, 0, 992, 448);
-            gc.drawImage(backgroundLevel, 0, 0);
-        } catch (FileNotFoundException e) {
-            e.printStackTrace();
-            System.out.println("MenuGame.renderTutorial()");
-        }
-    }
-
-    public void renderHighScore(GraphicsContext gc) {
-        FileInputStream file;
-        try {
-            file = new FileInputStream("src/resources/textures/victory.png");
-            final Image backgroundLevel = new Image(file);
-            gc.clearRect(0, 0, 992, 448);
-            gc.drawImage(backgroundLevel, 0, 0);
-            gc.setFont(Font.font("Impact", 60));
-            gc.setFill(Color.RED);
-            // int score = BombermanGame.getScore();
-            gc.fillText("Record: " + HighScore.getHighScore(), 350, 440);
-            gc.setFont(Font.font("Impact", 20));
-            gc.setFill(Color.WHEAT);
-            gc.fillText("Press Backspace to return to main menu", 10, 30);
-        } catch (FileNotFoundException e) {
-            e.printStackTrace();
-            System.out.println("MenuGame.renderHighscore");
-        }
-    }
-
-
-    public static int getScore() {
-        return score;
-    }
-
-    public static void setScore(final int score) {
-        BomberManGame.score = score;
-    }
-
-    public static int getLives() {
-        return lives;
-    }
-
-    public static void setLives(final int lives) {
-        BomberManGame.lives = lives;
-    }
-
-    public static GameCanvas getGameCanvas() {
-        return canvas;
-    }
-
-    public static boolean getMuted() {
-        return mute;
-    }
-
-    public static void setMuted(boolean muted) {
-        mute = muted;
-    }
-
-}
Index: ../BomberMan1.0/src/main/java/GamePowerUpItems/BombPassItem.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GamePowerUpItems/BombPassItem.java b/../BomberMan1.0/src/main/java/GamePowerUpItems/BombPassItem.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GamePowerUpItems/BombPassItem.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,10 +0,0 @@
-package GamePowerUpItems;
-
-import GameSprite.GameSprite;
-
-public class BombPassItem extends Powerup {
-
-  public BombPassItem(int x, int y) {
-    super(x, y, GameSprite.powerupBombpass.getFxImage());
-  }
-}
Index: ../BomberMan1.0/src/main/java/GameController/PauseGame.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GameController/PauseGame.java b/../BomberMan1.0/src/main/java/GameController/PauseGame.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GameController/PauseGame.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,98 +0,0 @@
-package GameController;
-
-import Main.BomberManGame;
-import GameMapGraphics.KeyboardInput;
-import javafx.scene.canvas.GraphicsContext;
-import javafx.scene.paint.Color;
-import javafx.scene.text.Font;
-
-public class PauseGame {
-    private KeyboardInput keyboardInput;
-    private int selecting;
-    private int selected;
-
-    /**
-     * Constructor.
-     *
-     * @param keyboardInput Accept keyboard input
-     */
-    public PauseGame(KeyboardInput keyboardInput) {
-        this.keyboardInput = keyboardInput;
-        selecting = 0;
-        selected = -1;
-    }
-
-    /**
-     * Render pause game.
-     */
-    public void showPauseGame(GraphicsContext gc) {
-        String sound = BomberManGame.getMuted() ? "off" : "on";
-
-        gc.setFill(Color.BLACK);
-        gc.fillRect(0, 0, 992, 448);
-        gc.setFont(Font.font("Impact", 40)); // Font
-        gc.setFill(Color.WHITE);
-        switch (selecting) {
-            case 0:
-                gc.fillText("Sound: " + sound, 350, 200);
-                gc.fillText("Main Menu", 350, 260);
-                gc.setFill(Color.RED);
-                gc.fillText("Resume", 350, 140);
-                break;
-            case 1:
-                gc.fillText("Resume", 350, 140);
-                gc.fillText("Main Menu", 350, 260);
-                gc.setFill(Color.RED);
-                gc.fillText("Sound: " + sound, 350, 200);
-                break;
-            case 2:
-                gc.fillText("Resume", 350, 140);
-                gc.fillText("Sound: " + sound, 350, 200);
-                gc.setFill(Color.RED);
-                gc.fillText("Main Menu", 350, 260);
-                break;
-            default:
-                break;
-        }
-    }
-
-    /**
-     * Update scene base on user keyboard input.
-     */
-    public void update() {
-        if (!keyboardInput.release && keyboardInput.down && selecting < 2) {
-            selecting++;
-            keyboardInput.setRelease(true);
-        } else if (!keyboardInput.release && keyboardInput.up && selecting > 0) {
-            selecting--;
-            keyboardInput.setRelease(true);
-        }
-        if ((keyboardInput.enter || keyboardInput.space) && !keyboardInput.release) {
-            switch (selecting) {
-                case 0:
-                    selected = 1;
-                    break;
-                case 1:
-                    BomberManGame.setMuted(!BomberManGame.getMuted());
-                    break;
-                case 2:
-                    selected = 2;
-                    break;
-                default:
-                    break;
-            }
-            if (selecting == 2) {
-                selecting = 0;
-            }
-            keyboardInput.setRelease(true);
-        }
-    }
-
-    public int getSelected() {
-        return selected;
-    }
-
-    public void setSelected(int selected) {
-        this.selected = selected;
-    }
-}
Index: ../.idea/uiDesigner.xml
===================================================================
diff --git a/../.idea/uiDesigner.xml b/../.idea/uiDesigner.xml
deleted file mode 100644
--- a/../.idea/uiDesigner.xml	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,124 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="Palette2">
-    <group name="Swing">
-      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
-      </item>
-      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
-      </item>
-      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
-      </item>
-      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.svg" removable="false" auto-create-binding="false" can-attach-label="true">
-        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
-      </item>
-      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
-        <initial-values>
-          <property name="text" value="Button" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
-        <initial-values>
-          <property name="text" value="RadioButton" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
-        <initial-values>
-          <property name="text" value="CheckBox" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
-        <initial-values>
-          <property name="text" value="Label" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
-          <preferred-size width="150" height="-1" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
-          <preferred-size width="150" height="-1" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
-          <preferred-size width="150" height="-1" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
-      </item>
-      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
-          <preferred-size width="200" height="200" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
-          <preferred-size width="200" height="200" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
-      </item>
-      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
-      </item>
-      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
-      </item>
-      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
-      </item>
-      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
-          <preferred-size width="-1" height="20" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
-      </item>
-      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
-      </item>
-    </group>
-  </component>
-</project>
\ No newline at end of file
Index: ../BomberMan1.0/src/main/java/GamePowerUpItems/Powerup.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GamePowerUpItems/Powerup.java b/../BomberMan1.0/src/main/java/GamePowerUpItems/Powerup.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GamePowerUpItems/Powerup.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,29 +0,0 @@
-package GamePowerUpItems;
-
-import GameMapEntity.GameEntity;
-import javafx.scene.image.Image;
-
-public abstract class Powerup extends GameEntity {
-  public Powerup(int x, int y, Image img) {
-    super(x, y, img);
-  }
-
-  protected String id;
-  protected int timer = 500;
-
-  @Override
-  public void update() {
-    timer--;
-    if (timer == 0) {
-      img = null;
-    }
-  }
-
-  public String getId() {
-    return id;
-  }
-
-  public void setId(String id) {
-    this.id = id;
-  }
-}
Index: ../BomberMan1.0/src/main/java/Main/Main.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/Main/Main.java b/../BomberMan1.0/src/main/java/Main/Main.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/Main/Main.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,10 +0,0 @@
-package Main;
-
-import javafx.application.Application;
-
-
-public class Main {
-    public static void main(String[] args) {
-        Application.launch(BomberManGame.class);
-    }
-}
Index: ../BomberMan1.0/.idea/workspace.xml
===================================================================
diff --git a/../BomberMan1.0/.idea/workspace.xml b/../BomberMan1.0/.idea/workspace.xml
deleted file mode 100644
--- a/../BomberMan1.0/.idea/workspace.xml	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,43 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-
-  <component name="PropertiesComponent">
-    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
-    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
-  </component>
-  <component name="RunManager">
-    <configuration name="MainApp" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="Main.MainApp" />
-      <module name="BomberMan1.0" />
-      <extension name="coverage">
-        <pattern>
-          <option name="PATTERN" value="Main.*" />
-          <option name="ENABLED" value="true" />
-        </pattern>
-      </extension>
-      <method v="2">
-        <option name="Make" enabled="true" />
-      </method>
-    </configuration>
-    <recent_temporary>
-      <list>
-        <item itemvalue="Application.MainApp" />
-      </list>
-    </recent_temporary>
-  </component>
-  <component name="ServiceViewManager">
-    <option name="viewStates">
-      <list>
-        <serviceView>
-          <treeState>
-            <expand />
-            <select />
-          </treeState>
-        </serviceView>
-      </list>
-    </option>
-  </component>
-  <component name="SvnConfiguration">
-    <configuration />
-  </component>
-</project>
\ No newline at end of file
Index: ../BomberMan1.0/pom.xml
===================================================================
diff --git a/../BomberMan1.0/pom.xml b/../BomberMan1.0/pom.xml
deleted file mode 100644
--- a/../BomberMan1.0/pom.xml	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,122 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
-    <modelVersion>4.0.0</modelVersion>
-
-    <groupId>main</groupId>
-    <artifactId>Bomberman</artifactId>
-    <version>1.0-SNAPSHOT</version>
-    <packaging>jar</packaging>
-
-    <name>Bomberman</name>
-
-    <properties>
-        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
-        <mainClass>main.MainApp</mainClass>
-    </properties>
-
-    <dependencies>
-        <!-- https://mvnrepository.com/artifact/org.openjfx/javafx-controls -->
-        <dependency>
-            <groupId>org.openjfx</groupId>
-            <artifactId>javafx-controls</artifactId>
-            <version>18</version>
-        </dependency>
-
-        <!-- https://mvnrepository.com/artifact/org.openjfx/javafx-base -->
-        <dependency>
-            <groupId>org.openjfx</groupId>
-            <artifactId>javafx-base</artifactId>
-            <version>18</version>
-        </dependency>
-
-        <!-- https://mvnrepository.com/artifact/org.openjfx/javafx-graphics -->
-        <dependency>
-            <groupId>org.openjfx</groupId>
-            <artifactId>javafx-graphics</artifactId>
-            <version>18</version>
-        </dependency>
-
-        <!-- https://mvnrepository.com/artifact/org.openjfx/javafx-fxml -->
-        <dependency>
-            <groupId>org.openjfx</groupId>
-            <artifactId>javafx-fxml</artifactId>
-            <version>18</version>
-        </dependency>
-
-        <!-- https://mvnrepository.com/artifact/org.openjfx/javafx-web -->
-        <dependency>
-            <groupId>org.openjfx</groupId>
-            <artifactId>javafx-web</artifactId>
-            <version>18</version>
-        </dependency>
-
-        <!-- https://mvnrepository.com/artifact/org.openjfx/javafx-media -->
-        <dependency>
-            <groupId>org.openjfx</groupId>
-            <artifactId>javafx-media</artifactId>
-            <version>18</version>
-        </dependency>
-
-        <!-- https://mvnrepository.com/artifact/org.controlsfx/controlsfx -->
-        <dependency>
-            <groupId>org.controlsfx</groupId>
-            <artifactId>controlsfx</artifactId>
-            <version>11.1.0</version>
-        </dependency>
-
-        <!-- https://mvnrepository.com/artifact/com.dlsc.formsfx/formsfx-core -->
-        <dependency>
-            <groupId>com.dlsc.formsfx</groupId>
-            <artifactId>formsfx-core</artifactId>
-            <version>11.5.0</version>
-        </dependency>
-
-        <!-- https://mvnrepository.com/artifact/org.openjfx/javafx-swing -->
-        <dependency>
-            <groupId>org.openjfx</groupId>
-            <artifactId>javafx-swing</artifactId>
-            <version>18</version>
-        </dependency>
-
-        <!-- https://mvnrepository.com/artifact/org.openjfx/javafx -->
-        <dependency>
-            <groupId>org.openjfx</groupId>
-            <artifactId>javafx</artifactId>
-            <version>18</version>
-            <type>pom</type>
-        </dependency>
-
-
-    </dependencies>
-
-    <build>
-        <plugins>
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-compiler-plugin</artifactId>
-                <version>3.8.1</version>
-                <configuration>
-                    <source>18</source>
-                    <target>18</target>
-                </configuration>
-            </plugin>
-
-            <plugin>
-                <groupId>org.openjfx</groupId>
-                <artifactId>javafx-maven-plugin</artifactId>
-                <version>0.0.6</version>
-                <executions>
-                    <execution>
-                        <!-- Default configuration for running with: mvn clean javafx:run -->
-                        <id>default-cli</id>
-                        <configuration>
-                            <mainClass>main.bomberman/main.bomberman.HelloApplication</mainClass>
-                        </configuration>
-                    </execution>
-                </executions>
-            </plugin>
-
-        </plugins>
-    </build>
-
-</project>
Index: ../BomberMan1.0/src/main/java/GameCharacter/BomberCharacter.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GameCharacter/BomberCharacter.java b/../BomberMan1.0/src/main/java/GameCharacter/BomberCharacter.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GameCharacter/BomberCharacter.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,68 +0,0 @@
-package GameCharacter;
-
-import GameMapEntity.GameAnimationEntity;
-import GameMapGraphics.KeyboardInput;
-import javafx.scene.image.Image;
-
-abstract public class BomberCharacter extends GameAnimationEntity {
-    protected int direction;// 0 Up, 1 Down, 2 Left, 3 Right
-    protected boolean alive = true;
-    protected boolean moving = false;
-    protected int velocity;
-    protected int timeShowDeath = 100;
-    protected boolean startDie = false;
-
-    public BomberCharacter(int x, int y, Image img) {
-        super(x, y, img);
-    }
-
-    public void setDirection(int direction) {
-        this.direction = direction;
-    }
-
-    public void setAlive(boolean alive) {
-        this.alive = alive;
-    }
-
-    public void setMoving(boolean moving) {
-        this.moving = moving;
-    }
-
-    public void setVelocity(int velocity) {
-        this.velocity = velocity;
-    }
-
-    public boolean isAlive() {
-        return alive;
-    }
-
-    public boolean isMoving() {
-        return moving;
-    }
-
-    public int getTimeTransfer() {
-        return timeTransfer;
-    }
-
-    public abstract void update();
-
-    public abstract void render();
-
-    public abstract void calculateMove();
-
-    public abstract boolean canMove();
-
-    public abstract void setPrecision(KeyboardInput input);
-
-    public boolean isStartDie() {
-        return startDie;
-    }
-
-    public void setTimeShowDeath(int timeShowDeath) {
-        this.timeShowDeath = timeShowDeath;
-    }
-
-    public void setStartDie(boolean startDie) {
-        this.startDie = startDie;
-    }
-}
Index: ../BomberMan1.0/src/main/java/GameMonster/Doll.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GameMonster/Doll.java b/../BomberMan1.0/src/main/java/GameMonster/Doll.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GameMonster/Doll.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,85 +0,0 @@
-package GameMonster;
-
-import GameMonster.moveMethod.moveType2;
-import GameSprite.GameSprite;
-
-public class Doll extends Monster {
-  private moveType2 moveType = new moveType2();
-
-  public Doll(int xUnit, int yUnit) {
-    super(xUnit, yUnit, GameSprite.dollLeft1.getFxImage());
-    direction = 0;
-    velocity = 1;
-  }
-
-  /**
-   * Move logic.
-   */
-  public void move() {
-    int tempX = x;
-    int tempY = y;
-    switch (direction) {
-      case 0:
-        tempY = y + velocity;
-        break;
-      case 1:
-        tempY = y - velocity;
-        break;
-      case 2:
-        tempX = x - velocity;
-        break;
-      case 3:
-        tempX = x + velocity;
-        break;
-      default:
-        break;
-    }
-
-    for (int i = 0; i < 4; i++) {
-      int xx = tempX + AddToXToCheckCollision[i];
-      int yy = tempY + AddToYToCheckCollision[i];
-      if (!canMove(xx, yy)) {
-        setDirection(moveType.setDirection(direction));
-        return;
-      }
-    }
-
-    this.setX(tempX);
-    this.setY(tempY);
-  }
-
-  @Override
-  public void update() {
-
-    if (!isAlive) {
-      deadAnimation();
-    } else {
-      move();
-      animate();
-      ifCollideWithPowerupOrFlame();
-      if (direction == 0) {
-        this.setImg(GameSprite.movingSprite(GameSprite.dollLeft1, GameSprite.dollLeft2, GameSprite.dollLeft3,
-            animation, timeTransfer).getFxImage());
-      } else if (direction == 1) {
-        this.setImg(GameSprite.movingSprite(GameSprite.dollRight1, GameSprite.dollRight2, GameSprite.dollRight3,
-            animation, timeTransfer).getFxImage());
-      } else if (direction == 2) {
-        this.setImg(GameSprite.movingSprite(GameSprite.dollLeft1, GameSprite.dollRight1, GameSprite.dollLeft3,
-            animation, timeTransfer).getFxImage());
-      } else if (direction == 3) {
-        this.setImg(GameSprite.movingSprite(GameSprite.dollRight1, GameSprite.dollLeft2, GameSprite.dollRight2,
-            animation, timeTransfer).getFxImage());
-      }
-    }
-  }
-
-  @Override
-  public void deadAnimation() {
-    if (timeDead-- > 0) {
-      this.setImg(GameSprite.movingSprite(GameSprite.dolllDead, GameSprite.mobDead11, GameSprite.mobDead12,
-          animation, timeTransfer).getFxImage());
-    } else {
-      this.removeFromGame();
-    }
-  }
-}
Index: ../BomberMan1.0/src/resources/levels/Level4.txt
===================================================================
diff --git a/../BomberMan1.0/src/resources/levels/Level4.txt b/../BomberMan1.0/src/resources/levels/Level4.txt
deleted file mode 100644
--- a/../BomberMan1.0/src/resources/levels/Level4.txt	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,48 +0,0 @@
-4 13 31
-###############################
-#     *     #    ***      3  F#
-#*# # #*# #*# # # # # # # # #*#
-#     B          *           ##
-# # # #*### # # # # #*#*# # # #
-#b       2**#x    #*#       #*#
-#*#*# #*# # #*# # # # # # # #*#
-#   *        s      * *       #
-#*# # #*# #*#*# # # # # # # #*#
-#f   **     #           **    #
-#*# #*# # # #*# # # # # # # #*#
-#F  3       #f     4  * *x   p#
-###############################
-
-
-Mô tả cấu trúc tệp cấu hình màn chơi:
-1/ Dòng đầu tiên bao gồm 3 số nguyên L, R, C:
-L - số thứ tự màn chơi
-R - số hàng của bản đồ
-C - số cột của bản đồ
-
-2/ R dòng tiếp theo, mỗi dòng có C kí tự. Mỗi kí tự đại diện cho một đối tượng trên bản đồ:
-Tiles:
-# - Wall
-* - Brick
-x - Portal
-
-Character:
-p - Bomber
-1 - Balloon
-2 - Oneal
-3 - Doll
-4 - Minvo
-5 - Kondonria
-6 - Dragon
-7 - batMonster
-8 - Phoenix
-Items:
-b - Bomb Item
-f - Flame Item
-s - Speed Item
-B - Bomb Pass Item
-F - Flame Pass Item
-W - Brick Pass Item
-l - Plus 1 live
-
-Kí tự khác các kí tự trên - Grass
Index: ../.idea/jarRepositories.xml
===================================================================
diff --git a/../.idea/jarRepositories.xml b/../.idea/jarRepositories.xml
deleted file mode 100644
--- a/../.idea/jarRepositories.xml	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,20 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="RemoteRepositoriesConfiguration">
-    <remote-repository>
-      <option name="id" value="central" />
-      <option name="name" value="Central Repository" />
-      <option name="url" value="https://repo.maven.apache.org/maven2" />
-    </remote-repository>
-    <remote-repository>
-      <option name="id" value="central" />
-      <option name="name" value="Maven Central repository" />
-      <option name="url" value="https://repo1.maven.org/maven2" />
-    </remote-repository>
-    <remote-repository>
-      <option name="id" value="jboss.community" />
-      <option name="name" value="JBoss Community repository" />
-      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
-    </remote-repository>
-  </component>
-</project>
\ No newline at end of file
Index: ../BomberMan1.0/src/main/java/GameBomb/BombAnimation.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GameBomb/BombAnimation.java b/../BomberMan1.0/src/main/java/GameBomb/BombAnimation.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GameBomb/BombAnimation.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,78 +0,0 @@
-package GameBomb;
-
-import GameMapEntity.GameAnimationEntity;
-import GameSprite.GameSprite;
-
-public class BombAnimation extends GameAnimationEntity {
-    private int direct; // 0 UP, 1 DOWN, 2 LEFT, 3 RIGHT, 4 CENTER
-    private boolean last = false;
-
-    /**
-     * Generate flame.
-     *
-     * @param xUnit X position of flame
-     * @param yUnit Y position of flame
-     * @param direct Drirection of flame
-     * @param last FLame time
-     */
-    public BombAnimation(int xUnit, int yUnit, int direct, boolean last) {
-        super(xUnit, yUnit, null);
-        this.direct = direct;
-        this.last = last;
-    }
-
-    @Override
-    public void update() {
-        animate();
-        switch (direct) {
-            case 0:
-                if (last) {
-                    setImg(
-                            GameSprite.movingSprite(GameSprite.explosionVerticalTopLast, GameSprite.explosionVerticalTopLast1,
-                                    GameSprite.explosionVerticalTopLast2, animation, timeTransfer).getFxImage());
-                } else {
-                    setImg(GameSprite.movingSprite(GameSprite.explosionVertical, GameSprite.explosionVertical1,
-                            GameSprite.explosionVertical2, animation, timeTransfer).getFxImage());
-                }
-                break;
-            case 1:
-                if (last) {
-                    setImg(GameSprite
-                            .movingSprite(GameSprite.explosionVerticalDownLast, GameSprite.explosionVerticalDownLast1,
-                                    GameSprite.explosionVerticalDownLast2, animation, timeTransfer)
-                            .getFxImage());
-                } else {
-                    setImg(GameSprite.movingSprite(GameSprite.explosionVertical, GameSprite.explosionVertical1,
-                            GameSprite.explosionVertical2, animation, timeTransfer).getFxImage());
-                }
-                break;
-            case 2:
-                if (last) {
-                    setImg(GameSprite
-                            .movingSprite(GameSprite.explosionHorizontalLeftLast, GameSprite.explosionHorizontalLeftLast1,
-                                    GameSprite.explosionHorizontalLeftLast2, animation, timeTransfer)
-                            .getFxImage());
-                } else {
-                    setImg(GameSprite.movingSprite(GameSprite.explosionHorizontal, GameSprite.explosionHorizontal1,
-                            GameSprite.explosionHorizontal2, animation, timeTransfer).getFxImage());
-                }
-                break;
-            case 3:
-                if (last) {
-                    setImg(GameSprite.movingSprite(GameSprite.explosionHorizontalRightLast,
-                            GameSprite.explosionHorizontalRightLast1, GameSprite.explosionHorizontalRightLast2, animation,
-                            timeTransfer).getFxImage());
-                } else {
-                    setImg(GameSprite.movingSprite(GameSprite.explosionHorizontal, GameSprite.explosionHorizontal1,
-                            GameSprite.explosionHorizontal2, animation, timeTransfer).getFxImage());
-                }
-                break;
-            case 4:
-                setImg(GameSprite.movingSprite(GameSprite.bombExploded, GameSprite.bombExploded1, GameSprite.bombExploded2,
-                        animation, timeTransfer).getFxImage());
-                break;
-            default:
-                break;
-        }
-    }
-}
Index: ../BomberMan1.0/src/main/java/GameMonster/Balloon.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GameMonster/Balloon.java b/../BomberMan1.0/src/main/java/GameMonster/Balloon.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GameMonster/Balloon.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,84 +0,0 @@
-package GameMonster;
-
-import GameMonster.moveMethod.moveType1;
-import GameSprite.GameSprite;
-
-public class Balloon extends Monster {
-  private final moveType1 movetype = new moveType1();
-
-  public Balloon(int xUnit, int yUnit) {
-    super(xUnit, yUnit, GameSprite.balloomLeft1.getFxImage());
-    direction = 2;
-  }
-
-  /**
-   * Move logic.
-   */
-  public void move() {
-    int tempX = x;
-    int tempY = y;
-    switch (direction) {
-      case 0:
-        tempY = y + velocity;
-        break;
-      case 1:
-        tempY = y + velocity;
-        break;
-      case 2:
-        tempX = x - velocity;
-        break;
-      case 3:
-        tempX = x + velocity;
-        break;
-      default:
-        break;
-    }
-
-    for (int i = 0; i < 4; i++) {
-      int xx = tempX + AddToXToCheckCollision[i];
-      int yy = tempY + AddToYToCheckCollision[i];
-      if (!canMove(xx, yy)) {
-        direction = movetype.setDirection(direction);
-        return;
-      }
-    }
-
-    this.setX(tempX);
-    this.setY(tempY);
-  }
-
-  @Override
-  public void update() {
-
-    if (!isAlive) {
-      deadAnimation();
-    } else {
-      move();
-      animate();
-      ifCollideWithPowerupOrFlame();
-      if (direction == 0) {
-        this.setImg(GameSprite.movingSprite(GameSprite.balloomLeft1, GameSprite.balloomLeft2,
-                GameSprite.balloomLeft3, animation, timeTransfer).getFxImage());
-      } else if (direction == 1) {
-        this.setImg(GameSprite.movingSprite(GameSprite.balloomRight1, GameSprite.balloomRight2,
-                GameSprite.balloomRight3, animation, timeTransfer).getFxImage());
-      } else if (direction == 2) {
-        this.setImg(GameSprite.movingSprite(GameSprite.balloomLeft1, GameSprite.balloomRight1,
-                GameSprite.balloomLeft3, animation, timeTransfer).getFxImage());
-      } else if (direction == 3) {
-        this.setImg(GameSprite.movingSprite(GameSprite.balloomRight1, GameSprite.balloomLeft2,
-                GameSprite.balloomRight2, animation, timeTransfer).getFxImage());
-      }
-    }
-  }
-
-  @Override
-  public void deadAnimation() {
-    if (timeDead-- > 0) {
-      this.setImg(GameSprite.movingSprite(GameSprite.balloomDead, GameSprite.mobDead11, GameSprite.mobDead12,
-          animation, timeTransfer).getFxImage());
-    } else {
-      this.removeFromGame();
-    }
-  }
-}
Index: ../BomberMan1.0/src/main/java/GameMonster/Phoenix.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GameMonster/Phoenix.java b/../BomberMan1.0/src/main/java/GameMonster/Phoenix.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GameMonster/Phoenix.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,98 +0,0 @@
-package GameMonster;
-
-import GameMonster.moveMethod.moveType2;
-import GameSprite.GameSprite;
-
-public class Phoenix extends Monster {
-  private final moveType2 movetype = new moveType2();
-  private int timeShowFire = 500;
-  // private int gapTime = 250;
-  // private DragonBreathe breathe;
-
-  public Phoenix(int xUnit, int yUnit) {
-    super(xUnit, yUnit, GameSprite.dragonLeft1.getFxImage());
-    direction = 2;
-    velocity = 3;
-  }
-
-  /**
-   * Move logic.
-   */
-  public void move() {
-    int tempX = x;
-    int tempY = y;
-    switch (direction) {
-      case 0:
-        tempY = y - velocity;
-        break;
-      case 1:
-        tempY = y + velocity;
-        break;
-      case 2:
-        tempX = x - velocity;
-        break;
-      case 3:
-        tempX = x + velocity;
-        break;
-      default:
-        break;
-    }
-
-    for (int i = 0; i < 4; i++) {
-      int xx = tempX + AddToXToCheckCollision[i];
-      int yy = tempY + AddToYToCheckCollision[i];
-      if (!canMove(xx, yy) || recognizeBomb(xx, yy)) {
-        direction = movetype.setDirection(direction);
-        return;
-      }
-    }
-
-    this.setX(tempX);
-    this.setY(tempY);
-  }
-
-  @Override
-  public void update() {
-
-    if (!isAlive) {
-      deadAnimation();
-    } else {
-      move();
-      animate();
-      ifCollideWithPowerupOrFlame();
-      if (direction == 0 && flameHit == 0) {
-        this.setImg(GameSprite.movingSprite(GameSprite.phoenixUp1, GameSprite.phoenixUp2, GameSprite.phoenixUp3,
-            animation, timeTransfer).getFxImage());
-      } else if (direction == 1 && flameHit == 0) {
-        this.setImg(GameSprite.movingSprite(GameSprite.phoenixDown1, GameSprite.phoenixDown2,
-                GameSprite.phoenixDown3, animation, timeTransfer).getFxImage());
-      } else if (direction == 2 && flameHit == 0) {
-        this.setImg(GameSprite.movingSprite(GameSprite.phoenixLeft1, GameSprite.phoenixLeft2,
-                GameSprite.phoenixLeft3, animation, timeTransfer).getFxImage());
-      } else if (direction == 3 && flameHit == 0) {
-        this.setImg(GameSprite.movingSprite(GameSprite.phoenixRight1, GameSprite.phoenixRight2,
-                GameSprite.phoenixRight3, animation, timeTransfer).getFxImage());
-      } else if (flameHit == 1) {
-        timeShowFire--;
-        if (timeShowFire == 0) {
-          flameHit--;
-          timeShowFire = 500;
-          velocity = 3;
-        }
-        this.setImg(
-                GameSprite.movingSprite(GameSprite.fire1, GameSprite.fire2, GameSprite.fire3, animation, timeTransfer)
-                .getFxImage());
-      }
-    }
-  }
-
-  @Override
-  public void deadAnimation() {
-    if (timeDead-- > 0) {
-      this.setImg(GameSprite.movingSprite(GameSprite.phoenixDown1, GameSprite.mobDead11, GameSprite.mobDead12,
-          animation, timeTransfer).getFxImage());
-    } else {
-      this.removeFromGame();
-    }
-  }
-}
Index: ../BomberMan1.0/src/main/java/GameMapEntity/EntityObject/Brick.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GameMapEntity/EntityObject/Brick.java b/../BomberMan1.0/src/main/java/GameMapEntity/EntityObject/Brick.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GameMapEntity/EntityObject/Brick.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,70 +0,0 @@
-package GameMapEntity.EntityObject;
-
-import GameMapEntity.GameAnimationEntity;
-import GameSprite.GameSprite;
-import GamePowerUpItems.Powerup;
-import javafx.scene.image.Image;
-
-public class Brick extends GameAnimationEntity {
-    private boolean isDestroyed = false;
-    private int timeAnimate = 30;
-
-    private boolean hasPower = false;
-    private Powerup powerup;
-
-    private boolean hasPortal = false;
-
-    private GameSprite[] sprites = {GameSprite.brick, GameSprite.brick2, GameSprite.brick3, GameSprite.brick4,
-            GameSprite.brick5, GameSprite.brick6, GameSprite.brick7};
-
-    public Brick(int x, int y, Image image) {
-        super(x, y, image);
-    }
-
-    public Brick(int x, int y, int level) {
-        super(x, y, null);
-        img = sprites[level].getFxImage();
-    }
-
-    public boolean hasPowerup() {
-        return hasPower;
-    }
-
-    public boolean hasPortal() {
-        return hasPortal;
-    }
-
-    public void setPowerUp(boolean hasPower, Powerup powerup) {
-        this.hasPower = hasPower;
-        this.powerup = powerup;
-    }
-
-    public void setPortal(boolean hasPortal) {
-        this.hasPortal = hasPortal;
-    }
-
-    public boolean isDestroyed() {
-        return isDestroyed;
-    }
-
-    public void setDestroyed(boolean destroy) {
-        isDestroyed = destroy;
-    }
-
-    public Powerup getPowerup() {
-        return powerup;
-    }
-
-    @Override
-    public void update() {
-        if (isDestroyed) {
-            animate();
-            if (timeAnimate-- > 0) {
-                img = GameSprite.movingSprite(GameSprite.brickExploded, GameSprite.brickExploded1,
-                        GameSprite.brickExploded2, animation, timeTransfer).getFxImage();
-            } else {
-                img = null;
-            }
-        }
-    }
-}
Index: ../BomberMan1.0/src/main/java/GameMapEntity/EntityObject/Grass.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GameMapEntity/EntityObject/Grass.java b/../BomberMan1.0/src/main/java/GameMapEntity/EntityObject/Grass.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GameMapEntity/EntityObject/Grass.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,22 +0,0 @@
-package GameMapEntity.EntityObject;
-
-import GameMapEntity.GameEntity;
-import javafx.scene.image.Image;
-import GameSprite.GameSprite;
-
-public class Grass extends GameEntity {
-    private GameSprite[] sprites = {GameSprite.grass1, GameSprite.grass2, GameSprite.grass3, GameSprite.grass4,
-            GameSprite.grass5, GameSprite.grass6, GameSprite.grass7};
-
-    public Grass(int x, int y, int level) {
-        super(x, y, null);
-        this.setImg(sprites[level].getFxImage());
-    }
-
-    public Grass(int x, int y, Image image) {
-        super(x, y, image);
-    }
-
-    @Override
-    public void update() {}
-}
Index: ../BomberMan1.0/src/main/java/GameMapGraphics/GameCanvas.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GameMapGraphics/GameCanvas.java b/../BomberMan1.0/src/main/java/GameMapGraphics/GameCanvas.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GameMapGraphics/GameCanvas.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,44 +0,0 @@
-package GameMapGraphics;
-
-import javafx.scene.canvas.Canvas;
-import GameMapEntity.GameEntity;
-
-public class GameCanvas extends Canvas {
-    private GameBase gameBase = new GameBase();
-    private KeyboardInput keyboardInput = new KeyboardInput();
-
-    /**
-     * Create GameCanvas.
-     */
-    public GameCanvas(double width, double height) {
-        super(width, height);
-
-        // Key Event
-        this.requestFocus();
-        this.setFocusTraversable(true);
-        this.setOnKeyPressed(keyEvent -> keyboardInput.KeyPressed(keyEvent));
-        this.setOnKeyReleased(keyEvent -> keyboardInput.KeyReleased(keyEvent));
-    }
-
-    public void update() {
-        gameBase.update();
-    }
-
-    public void render() {
-        gameBase.render(this);
-    }
-    public KeyboardInput getInput() {
-        return keyboardInput;
-    }
-    public GameEntity getEntityInCoodinate(int x, int y) {
-        return gameBase.getEntityInCoodinate(x, y);
-    }
-
-    public GameEntity getGrass(int x, int y) {
-        return gameBase.getGrass(x, y);
-    }
-
-    public GameBase getGameBase() {
-        return gameBase;
-    }
-}
Index: ../BomberMan1.0/src/main/java/GameMonster/Dragon.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GameMonster/Dragon.java b/../BomberMan1.0/src/main/java/GameMonster/Dragon.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GameMonster/Dragon.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,92 +0,0 @@
-package GameMonster;
-
-import GameMonster.moveMethod.moveType2;
-import GameSprite.GameSprite;
-
-public class Dragon extends Monster {
-  private final moveType2 movetype = new moveType2();
-  // private int timeShowFire = 100;
-  // private int gapTime = 250;
-  // private DragonBreathe breathe;
-
-  public Dragon(int xUnit, int yUnit) {
-    super(xUnit, yUnit, GameSprite.dragonLeft1.getFxImage());
-    direction = 2;
-    velocity = 3;
-  }
-
-  /**
-   * Move logic.
-   */
-  public void move() {
-    int tempX = x;
-    int tempY = y;
-    switch (direction) {
-      case 0:
-        tempY = y - velocity;
-        break;
-      case 1:
-        tempY = y + velocity;
-        break;
-      case 2:
-        tempX = x - velocity;
-        break;
-      case 3:
-        tempX = x + velocity;
-        break;
-      default:
-        break;
-    }
-
-    for (int i = 0; i < 4; i++) {
-      int xx = tempX + AddToXToCheckCollision[i];
-      int yy = tempY + AddToYToCheckCollision[i];
-      if (!canMove(xx, yy) || recognizeBomb(xx, yy)) {
-        direction = movetype.setDirection(direction);
-        return;
-      }
-    }
-
-    this.setX(tempX);
-    this.setY(tempY);
-  }
-
-  @Override
-  public void update() {
-
-    if (!isAlive) {
-      deadAnimation();
-    } else {
-      move();
-      animate();
-      ifCollideWithPowerupOrFlame();
-      if (direction == 0 && flameHit == 0) {
-        this.setImg(GameSprite.movingSprite(GameSprite.dragonUp1, GameSprite.dragonUp2, GameSprite.dragonUp3,
-            animation, timeTransfer).getFxImage());
-      } else if (direction == 1 && flameHit == 0) {
-        this.setImg(GameSprite.movingSprite(GameSprite.dragonDown1, GameSprite.dragonDown2, GameSprite.dragonDown3,
-            animation, timeTransfer).getFxImage());
-      } else if (direction == 2 && flameHit == 0) {
-        this.setImg(GameSprite.movingSprite(GameSprite.dragonLeft1, GameSprite.dragonLeft2, GameSprite.dragonLeft3,
-            animation, timeTransfer).getFxImage());
-      } else if (direction == 3 && flameHit == 0) {
-        this.setImg(GameSprite.movingSprite(GameSprite.dragonRight1, GameSprite.dragonRight2,
-                GameSprite.dragonRight3, animation, timeTransfer).getFxImage());
-      } else if (flameHit == 1) {
-        this.setImg(
-                GameSprite.movingSprite(GameSprite.fire1, GameSprite.fire2, GameSprite.fire3, animation, timeTransfer)
-                .getFxImage());
-      }
-    }
-  }
-
-  @Override
-  public void deadAnimation() {
-    if (timeDead-- > 0) {
-      this.setImg(GameSprite.movingSprite(GameSprite.dragonDown1, GameSprite.mobDead11, GameSprite.mobDead12,
-          animation, timeTransfer).getFxImage());
-    } else {
-      this.removeFromGame();
-    }
-  }
-}
Index: ../BomberMan1.0/src/resources/levels/Level3.txt
===================================================================
diff --git a/../BomberMan1.0/src/resources/levels/Level3.txt b/../BomberMan1.0/src/resources/levels/Level3.txt
deleted file mode 100644
--- a/../BomberMan1.0/src/resources/levels/Level3.txt	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,48 +0,0 @@
-3 13 31
-###############################
-#     *     #    ***       x *#
-#*### #*# #*# # # # # # # ### #
-#       3   B*       2      **#
-#*# # #*### # # # # #*#*# # #*#
-#b        **#*    #   1  *    #
-#*#*# #*# # #*# # # # #*# # #*#
-#f     2      s      ***      #
-#*# # #*# #*#*#*###*# # # ###*#
-#    *f      ** 3   l   **    #
-#*# #*# # # # # # # # # # # #*#
-#p       x   F##**           x#
-###############################
-
-
-Mô tả cấu trúc tệp cấu hình màn chơi:
-1/ Dòng đầu tiên bao gồm 3 số nguyên L, R, C:
-L - số thứ tự màn chơi
-R - số hàng của bản đồ
-C - số cột của bản đồ
-
-2/ R dòng tiếp theo, mỗi dòng có C kí tự. Mỗi kí tự đại diện cho một đối tượng trên bản đồ:
-Tiles:
-# - Wall
-* - Brick
-x - Portal
-
-Character:
-p - Bomber
-1 - Balloon
-2 - Oneal
-3 - Doll
-4 - Minvo
-5 - Kondonria
-6 - Dragon
-7 - batMonster
-8 - Phoenix
-Items:
-b - Bomb Item
-f - Flame Item
-s - Speed Item
-B - Bomb Pass Item
-F - Flame Pass Item
-W - Brick Pass Item
-l - Plus 1 live
-
-Kí tự khác các kí tự trên - Grass
Index: ../BomberMan1.0/src/main/java/GameMonster/moveMethod/moveType1.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GameMonster/moveMethod/moveType1.java b/../BomberMan1.0/src/main/java/GameMonster/moveMethod/moveType1.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GameMonster/moveMethod/moveType1.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,16 +0,0 @@
-package GameMonster.moveMethod;
-
-public class moveType1 extends MonsterMovement {
-
-  @Override
-  public int setDirection(int d) {
-    // TODO Auto-generated method stub
-    if (d == 2) {
-      return 3;
-    } else {
-      return 2;
-    }
-  }
-
-
-}
Index: ../BomberMan1.0/src/main/java/GameMapGraphics/KeyboardInput.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GameMapGraphics/KeyboardInput.java b/../BomberMan1.0/src/main/java/GameMapGraphics/KeyboardInput.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GameMapGraphics/KeyboardInput.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,78 +0,0 @@
-package GameMapGraphics;
-
-import javafx.scene.input.KeyCode;
-import javafx.scene.input.KeyEvent;
-
-public class KeyboardInput {
-    public boolean up = false;
-    public boolean down = false;
-    public boolean left = false;
-    public boolean right = false;
-    public boolean skill = false;
-    public boolean pause = false;
-    public boolean enter = false;
-    public boolean space = false;
-
-    public boolean backspace = false;
-    public boolean release = false;
-
-    public void KeyPressed(KeyEvent e) {
-        if (e.getCode() == KeyCode.UP || e.getCode() == KeyCode.W) {
-            up = true;
-        }
-        if (e.getCode() == KeyCode.DOWN || e.getCode() == KeyCode.S) {
-            down = true;
-        }
-        if (e.getCode() == KeyCode.LEFT || e.getCode() == KeyCode.A) {
-            left = true;
-        }
-        if (e.getCode() == KeyCode.RIGHT || e.getCode() == KeyCode.D) {
-            right = true;
-        }
-        if (e.getCode() == KeyCode.TAB) {
-            pause = true;
-        }
-        if (e.getCode() == KeyCode.ENTER) {
-            enter = true;
-        }
-        if (e.getCode() == KeyCode.SPACE) {
-            space = true;
-        }
-        if (e.getCode() == KeyCode.BACK_SPACE) {
-            backspace = true;
-        }
-        release = false;
-    }
-
-    public void KeyReleased(KeyEvent e) {
-        if (e.getCode() == KeyCode.UP || e.getCode() == KeyCode.W) {
-            up = false;
-        }
-        if (e.getCode() == KeyCode.DOWN || e.getCode() == KeyCode.S) {
-            down = false;
-        }
-        if (e.getCode() == KeyCode.LEFT || e.getCode() == KeyCode.A) {
-            left = false;
-        }
-        if (e.getCode() == KeyCode.RIGHT || e.getCode() == KeyCode.D) {
-            right = false;
-        }
-        if (e.getCode() == KeyCode.TAB) {
-            pause = false;
-        }
-        if (e.getCode() == KeyCode.SPACE) {
-            space = false;
-        }
-        if (e.getCode() == KeyCode.ENTER) {
-            enter = false;
-        }
-        if (e.getCode() == KeyCode.BACK_SPACE) {
-            backspace = false;
-        }
-        release = true;
-    }
-
-    public void setRelease(boolean release) {
-        this.release = release;
-    }
-}
Index: ../BomberMan1.0/src/main/java/GameMonster/moveMethod/MonsterMovement.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GameMonster/moveMethod/MonsterMovement.java b/../BomberMan1.0/src/main/java/GameMonster/moveMethod/MonsterMovement.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GameMonster/moveMethod/MonsterMovement.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,10 +0,0 @@
-package GameMonster.moveMethod;
-
-import java.util.Random;
-
-public abstract class MonsterMovement {
-
-  protected Random randomdirect = new Random();
-
-  public abstract int setDirection(int d);
-}
Index: ../BomberMan1.0/.gitignore
===================================================================
diff --git a/../BomberMan1.0/.gitignore b/../BomberMan1.0/.gitignore
deleted file mode 100644
--- a/../BomberMan1.0/.gitignore	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,38 +0,0 @@
-target/
-!.mvn/wrapper/maven-wrapper.jar
-!**/src/main/**/target/
-!**/src/test/**/target/
-
-### IntelliJ IDEA ###
-.idea/modules.xml
-.idea/jarRepositories.xml
-.idea/compiler.xml
-.idea/libraries/
-*.iws
-*.iml
-*.ipr
-
-### Eclipse ###
-.apt_generated
-.classpath
-.factorypath
-.project
-.settings
-.springBeans
-.sts4-cache
-
-### NetBeans ###
-/nbproject/private/
-/nbbuild/
-/dist/
-/nbdist/
-/.nb-gradle/
-build/
-!**/src/main/**/build/
-!**/src/test/**/build/
-
-### VS Code ###
-.vscode/
-
-### Mac OS ###
-.DS_Store
\ No newline at end of file
Index: ../BomberMan1.0/src/main/java/GamePowerUpItems/PlusFlameItem.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GamePowerUpItems/PlusFlameItem.java b/../BomberMan1.0/src/main/java/GamePowerUpItems/PlusFlameItem.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GamePowerUpItems/PlusFlameItem.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,10 +0,0 @@
-package GamePowerUpItems;
-
-import GameSprite.GameSprite;
-
-public class PlusFlameItem extends Powerup {
-
-  public PlusFlameItem(int x, int y) {
-    super(x, y, GameSprite.powerupFlames.getFxImage());
-  }
-}
Index: ../BomberMan1.0/.idea/misc.xml
===================================================================
diff --git a/../BomberMan1.0/.idea/misc.xml b/../BomberMan1.0/.idea/misc.xml
deleted file mode 100644
--- a/../BomberMan1.0/.idea/misc.xml	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,14 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ExternalStorageConfigurationManager" enabled="true" />
-  <component name="MavenProjectsManager">
-    <option name="originalFiles">
-      <list>
-        <option value="$PROJECT_DIR$/pom.xml" />
-      </list>
-    </option>
-  </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" project-jdk-name="11" project-jdk-type="JavaSDK">
-    <output url="file://$PROJECT_DIR$/out" />
-  </component>
-</project>
\ No newline at end of file
Index: ../BomberMan1.0/src/main/java/GameMapEntity/GameAnimationEntity.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GameMapEntity/GameAnimationEntity.java b/../BomberMan1.0/src/main/java/GameMapEntity/GameAnimationEntity.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GameMapEntity/GameAnimationEntity.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,23 +0,0 @@
-package GameMapEntity;
-
-import javafx.scene.image.Image;
-
-public abstract class GameAnimationEntity extends GameEntity {
-    protected int animation = 0;
-
-    public static final int MAX_ANIMATE = 3000;
-
-    protected int timeTransfer = 26;
-
-    public GameAnimationEntity(int xUnit, int yUnit, Image img) {
-        super(xUnit, yUnit, img);
-    }
-
-    protected void animate() {
-        if (animation > MAX_ANIMATE){
-            animation = 0;
-        } else {
-            animation += 1;
-        }
-    }
-}
Index: ../BomberMan1.0/src/main/java/GameMapGraphics/HighScore.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GameMapGraphics/HighScore.java b/../BomberMan1.0/src/main/java/GameMapGraphics/HighScore.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GameMapGraphics/HighScore.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,48 +0,0 @@
-package GameMapGraphics;
-
-import java.io.BufferedReader;
-import java.io.BufferedWriter;
-import java.io.FileInputStream;
-import java.io.FileWriter;
-import java.io.IOException;
-import java.io.InputStreamReader;
-
-public class HighScore {
-    private static String url = "src/resources/highscore/highscore.txt";
-
-    /**
-     * Get high score.
-     *
-     * @return high score.
-     */
-    public static String getHighScore() {
-        try (FileInputStream fileInputStream = new FileInputStream(url);
-             BufferedReader bufferedReader =
-                     new BufferedReader(new InputStreamReader(fileInputStream))) {
-            String line = bufferedReader.readLine();
-            // while (line != null) {
-            // line = bufferedReader.readLine();
-            return line;
-            // }
-        } catch (IOException e) {
-            e.printStackTrace();
-        }
-        return "";
-    }
-
-    public static void setNewHighScore(int score) {
-        int preHighscore = Integer.parseInt(HighScore.getHighScore());
-        if (preHighscore < score) {
-            try (FileWriter fileWriter = new FileWriter(url, false);
-                 BufferedWriter bufferedWriter = new BufferedWriter(fileWriter)) {
-                bufferedWriter.write(String.valueOf(score));
-                // bufferedWriter.newLine();
-                bufferedWriter.flush();
-            } catch (IOException e) {
-                e.printStackTrace();
-            }
-            // return true;
-        }
-        // return false;
-    }
-}
Index: ../BomberMan1.0/src/main/java/GameSprite/GameSpriteSheet.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GameSprite/GameSpriteSheet.java b/../BomberMan1.0/src/main/java/GameSprite/GameSpriteSheet.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GameSprite/GameSpriteSheet.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,43 +0,0 @@
-package GameSprite;
-
-import java.awt.image.BufferedImage;
-import java.io.IOException;
-import java.net.URL;
-import javax.imageio.ImageIO;
-
-
-public class GameSpriteSheet {
-    private String path;
-    public int size;
-    protected int[] pixels;
-
-    public static final GameSpriteSheet tiles = new GameSpriteSheet("src/resources/textures/classic.png", 256);
-    public static final GameSpriteSheet dragon = new GameSpriteSheet("/resources/textures/dragon.png", 64);
-    public static final GameSpriteSheet phoenix = new GameSpriteSheet("/resources/textures/Phoenix.png", 64);
-    public static final GameSpriteSheet fireMonster = new GameSpriteSheet("/resources/textures/fire.png", 48);
-    public static final GameSpriteSheet batMonster =
-            new GameSpriteSheet("/resources/textures/batmonster4.png", 64);
-    public static final GameSpriteSheet newtiles =
-            new GameSpriteSheet("/resources/textures/TilesMap.png", 96);
-
-    public GameSpriteSheet(String path, int size) {
-        this.path = path;
-        this.size = size;
-        pixels = new int[this.size * this.size];
-        load();
-    }
-
-    private void load(){
-        BufferedImage bufferedImage;
-        try{
-            URL a = GameSpriteSheet.class.getResource(path);
-            bufferedImage = ImageIO.read(a);
-            int w = bufferedImage.getWidth();
-            int h = bufferedImage.getHeight();
-            bufferedImage.getRGB(0, 0, w, h, pixels, 0,w);
-        }catch (IOException e){
-            e.printStackTrace();
-            System.exit(0);
-        }
-    }
-}
Index: ../BomberMan1.0/src/main/java/GameController/MenuGame.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GameController/MenuGame.java b/../BomberMan1.0/src/main/java/GameController/MenuGame.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GameController/MenuGame.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,119 +0,0 @@
-package GameController;
-
-import java.io.FileInputStream;
-import java.io.FileNotFoundException;
-import Main.BomberManGame;
-import GameMapGraphics.KeyboardInput;
-import javafx.scene.canvas.GraphicsContext;
-import javafx.scene.image.Image;
-import javafx.scene.paint.Color;
-import javafx.scene.text.Font;
-
-public class MenuGame {
-    private boolean startGame = false;
-    private boolean highscore = false;
-    private boolean tutorial = false;
-    private boolean quit = false;
-
-    private KeyboardInput keyboardInput;
-    private int selecting = 0;
-    private final int[] pointerCoordinate = {185, 235, 285, 335, 385};
-
-    public MenuGame(KeyboardInput keyboardInput) {
-        this.keyboardInput = keyboardInput;
-    }
-
-    /**
-     * Show menu.
-     */
-    public void showMenu(GraphicsContext gc) {
-        FileInputStream file;
-        try {
-            file = new FileInputStream("src/resources/textures/menubackground.png");
-            final Image backgroundImage = new Image(file);
-            file = new FileInputStream("src/resources/textures/menupointer3.png");
-            final Image pointer = new Image(file);
-            gc.setFill(Color.WHITE);
-            gc.clearRect(0, 0, 992, 448);
-            gc.drawImage(backgroundImage, 0, 0);
-            gc.drawImage(pointer, 350, pointerCoordinate[selecting]);
-        } catch (FileNotFoundException e) {
-            e.printStackTrace();
-            System.out.println("MenuGame.showMenu()");
-        }
-        gc.setFont(Font.font("Impact", 30)); // Font
-        gc.fillText("New Game", 400, 230);
-        String sound = BomberManGame.getMuted() ? "off" : "on";
-        gc.fillText("Sound : " + sound, 400, 280);
-
-        gc.fillText("HighScore", 400, 330);
-
-        gc.fillText("Tutorial", 400, 380);
-
-        gc.fillText("Quit", 400, 430);
-    }
-
-    public void update() {
-        if (!keyboardInput.release && keyboardInput.down && selecting < 4) {
-            selecting++;
-            keyboardInput.setRelease(true);
-        } else if (!keyboardInput.release && keyboardInput.up && selecting > 0) {
-            selecting--;
-            keyboardInput.setRelease(true);
-        }
-        if ((keyboardInput.space || keyboardInput.enter) && !keyboardInput.release) {
-            switch (selecting) {
-                case 0:
-                    startGame = true;
-                    break;
-                case 1:
-                    BomberManGame.setMuted(!BomberManGame.getMuted());
-                    break;
-                case 2:
-                    highscore = true;
-                    break;
-                case 3:
-                    tutorial = true;
-                    break;
-                case 4:
-                    quit = true;
-                    break;
-                default:
-                    break;
-            }
-            keyboardInput.setRelease(true);
-        }
-    }
-
-    public boolean isStartGame() {
-        return startGame;
-    }
-
-    public void setStartGame(boolean start) {
-        startGame = start;
-    }
-
-    public boolean isMuted() {
-        return BomberManGame.getMuted();
-    }
-
-    public boolean isQuit() {
-        return quit;
-    }
-
-    public boolean showTutorial() {
-        return tutorial;
-    }
-
-    public void setShowTutorial(boolean p) {
-        this.tutorial = p;
-    }
-
-    public boolean showHighScore() {
-        return highscore;
-    }
-
-    public void setShowHighScore(boolean p) {
-        this.highscore = p;
-    }
-}
Index: ../.idea/BomberManGame_Team06_1.0.iml
===================================================================
diff --git a/../.idea/BomberManGame_Team06_1.0.iml b/../.idea/BomberManGame_Team06_1.0.iml
deleted file mode 100644
--- a/../.idea/BomberManGame_Team06_1.0.iml	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,9 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<module type="JAVA_MODULE" version="4">
-  <component name="NewModuleRootManager" inherit-compiler-output="true">
-    <exclude-output />
-    <content url="file://$MODULE_DIR$" />
-    <orderEntry type="inheritedJdk" />
-    <orderEntry type="sourceFolder" forTests="false" />
-  </component>
-</module>
\ No newline at end of file
Index: ../BomberMan1.0/src/resources/levels/Level1.txt
===================================================================
diff --git a/../BomberMan1.0/src/resources/levels/Level1.txt b/../BomberMan1.0/src/resources/levels/Level1.txt
deleted file mode 100644
--- a/../BomberMan1.0/src/resources/levels/Level1.txt	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,47 +0,0 @@
-1 13 31
-###############################
-#*     ** *    *   *  * * *   #
-# # # # # # #*#*# # # #*#*#*# #
-#*  *    F     *      *   * * #
-# # # # # #*# #*#*#*# # # # #*#
-#f      *    B*  *  *s    1  x#
-# # # # # # # # # #*# #*# # # #
-#*   b 1   *  *  *   *       *#
-# # # # #*# # # #*#*# # # # # #
-#    1    * # *   *          *#
-#*# # # # # # # #*# # # # # # #
-#p   x      #**       1  *    #
-###############################
-
-
-Mô tả cấu trúc tệp cấu hình màn chơi:
-1/ Dòng đầu tiên bao gồm 3 số nguyên L, R, C:
-L - số thứ tự màn chơi
-R - số hàng của bản đồ
-C - số cột của bản đồ
-
-2/ R dòng tiếp theo, mỗi dòng có C kí tự. Mỗi kí tự đại diện cho một đối tượng trên bản đồ:
-Tiles:
-# - Wall
-* - Brick
-x - Portal
-
-Character:
-p - Bomber
-1 - Balloon
-2 - Oneal
-3 - Doll
-4 - Minvo
-5 - Kondonria
-6 - Dragon
-7 - batMonster
-8 - Phoenix
-Items:
-b - Bomb Item
-f - Flame Item
-s - Speed Item
-B - Bomb Pass Item
-F - Flame Pass Item
-W - Brick Pass Item
-l - Plus 1 live
-Kí tự khác các kí tự trên - Grass
Index: ../BomberMan1.0/src/main/java/GameMapGraphics/GameMap.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GameMapGraphics/GameMap.java b/../BomberMan1.0/src/main/java/GameMapGraphics/GameMap.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GameMapGraphics/GameMap.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,201 +0,0 @@
-package GameMapGraphics;
-
-import GameCharacter.Bomber;
-import GameMapEntity.GameEntity;
-import GameMonster.Monster;
-import GameMonster.BatMonster;
-import GameMonster.Balloon;
-import GameMonster.Doll;
-import GameMonster.Dragon;
-import GameMonster.Kondoria;
-import GameMonster.Minvo;
-import GameMonster.Oneal;
-import GameMonster.Phoenix;
-import GameMapEntity.EntityObject.Grass;
-import GameMapEntity.EntityObject.Brick;
-import GameMapEntity.EntityObject.Wall;
-import GamePowerUpItems.Powerup;
-import GamePowerUpItems.BombPassItem;
-import GamePowerUpItems.BrickPassItem;
-import GamePowerUpItems.FlamePassItem;
-import GamePowerUpItems.PlusBombItem;
-import GamePowerUpItems.PlusFlameItem;
-import GamePowerUpItems.PlusLiveItem;
-import GamePowerUpItems.PlusSpeedItem;
-import GameMapGraphics.GameBase;
-
-import java.io.BufferedReader;
-import java.io.FileReader;
-import java.util.ArrayList;
-import java.util.List;
-
-public class GameMap {
-    private int width;
-    private int height;
-    private List<GameEntity> collidableEntities = new ArrayList<>();
-    private List<Grass> grassList = new ArrayList<>();
-    private List<Monster> monsterList = new ArrayList<>();
-    private Bomber bomber;
-
-    public void CreateNewMap(String path, int CurrentMap){
-        collidableEntities.clear();
-        grassList.clear();
-        monsterList.clear();
-        try(FileReader fileReader = new FileReader(path);
-            BufferedReader br = new BufferedReader(fileReader)) {
-            String map_info = br.readLine();
-            height = Integer.parseInt(map_info.substring(2, 4));
-            width = Integer.parseInt((map_info.substring(5)));
-
-            for (int i = 0; i < height; i++) {
-                String temp = br.readLine();
-                GameEntity object;
-                for (int j = 0; j < temp.length(); j++) {
-                    object = new Grass(j, i, CurrentMap);
-                    grassList.add((Grass) object);
-
-                    switch (temp.charAt(j)) {
-                        case '#':
-                            object = new Wall(j, i, CurrentMap);
-                            collidableEntities.add(object);
-                            break;
-                        case '*':
-                            object = new Brick(j, i, CurrentMap);
-                            collidableEntities.add(object);
-                            break;
-                        case 'x':
-                            Brick object2 = new Brick(j, i, CurrentMap);
-                            object2.setPortal(true);
-                            collidableEntities.add(object2);
-                            break;
-                        case 'p':
-                            bomber = new Bomber(j, i, new KeyboardInput());
-                            break;
-                        case '1':
-                            object = new Balloon(j, i);
-                            monsterList.add((Balloon) object);
-                            break;
-                        case '2':
-                            object = new Oneal(j, i);
-                            monsterList.add((Oneal) object);
-                            break;
-                        case '3':
-                            object = new Doll(j, i);
-                            monsterList.add((Doll) object);
-                            break;
-                        case '4':
-                            object = new Minvo(j, i);
-                            monsterList.add((Minvo) object);
-                            break;
-                        case '5':
-                            object = new Kondoria(j, i);
-                            monsterList.add((Kondoria) object);
-                            break;
-                        case '6':
-                            object = new Dragon(j, i);
-                            monsterList.add((Dragon) object);
-                            break;
-                        case '7':
-                            object = new BatMonster(j, i);
-                            monsterList.add((BatMonster) object);
-                            break;
-                        case '8':
-                            object = new Phoenix(j, i);
-                            monsterList.add((Phoenix) object);
-                            break;
-                        case 'b':
-                            object = new Brick(j, i, CurrentMap);
-                            Powerup pbi = new PlusBombItem(j, i);
-
-                            ((Brick) object).setPowerUp(true, pbi);
-                            collidableEntities.add(object);
-
-                            pbi.setId("pbi");
-                            break;
-                        case 'f':
-                            object = new Brick(j, i, CurrentMap);
-                            Powerup pfi = new PlusFlameItem(j, i);
-
-                            ((Brick) object).setPowerUp(true, pfi);
-                            collidableEntities.add(object);
-
-                            pfi.setId("pfi");
-                            break;
-                        case 's':
-                            object = new Brick(j, i, CurrentMap);
-                            Powerup psi = new PlusSpeedItem(j, i);
-
-                            ((Brick) object).setPowerUp(true, psi);
-                            collidableEntities.add(object);
-
-                            psi.setId("psi");
-                            break;
-                        case 'B':
-                            object = new Brick(j, i, CurrentMap);
-                            Powerup bpi = new BombPassItem(j, i);
-
-                            ((Brick) object).setPowerUp(true, bpi);
-                            collidableEntities.add(object);
-
-                            bpi.setId("bpi");
-                            break;
-                        case 'F':
-                            object = new Brick(j, i, CurrentMap);
-                            Powerup fpi = new FlamePassItem(j, i);
-
-                            ((Brick) object).setPowerUp(true, fpi);
-                            collidableEntities.add(object);
-
-                            fpi.setId("fpi");
-                            break;
-                        case 'W':
-                            object = new Brick(j, i, CurrentMap);
-                            Powerup wpi = new BrickPassItem(j, i);
-
-                            ((Brick) object).setPowerUp(true, wpi);
-                            collidableEntities.add(object);
-
-                            wpi.setId("wpi");
-                            break;
-                        case 'l':
-                            object = new Brick(j, i, CurrentMap);
-                            Powerup pli = new PlusLiveItem(j, i);
-
-                            ((Brick) object).setPowerUp(true, pli);
-                            collidableEntities.add(object);
-
-                            pli.setId("pli");
-                            break;
-                        default:
-                            break;
-                    }
-                }
-            }
-        } catch (Exception e) {
-            e.printStackTrace();
-        }
-    }
-    public List<GameEntity> getCollidableEntities() {
-        return collidableEntities;
-    }
-
-  public List<Grass> getGrassList() {
-    return grassList;
-  }
-
-  public Bomber getBomber() {
-    return bomber;
-  }
-
-  public List<Monster> getEnemyList() {
-    return monsterList;
-  }
-
-  public int getWidth() {
-    return width;
-  }
-
-  public int getHeight() {
-    return height;
-  }
-}
Index: ../BomberMan1.0/src/resources/levels/Level6.txt
===================================================================
diff --git a/../BomberMan1.0/src/resources/levels/Level6.txt b/../BomberMan1.0/src/resources/levels/Level6.txt
deleted file mode 100644
--- a/../BomberMan1.0/src/resources/levels/Level6.txt	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,48 +0,0 @@
-6 13 31
-###############################
-#B   3    *   5         **x   #
-#*# ### # # # #  # # # # # # *#
-#    #  #*# # #* # #*#        #
-#f#  #  # # # # *# # # #  #*#*#
-#        7              #  6 F#
-#b# # # ### ### # # # # # # #*#
-#           f** *       #   **#
-#s# # # # #*# # #*# # # # # #*#
-#   7   *        4 W#         #
-#*## #*###* # #*#*#*#*# # # #*#
-#p         x  F**        3  **#
-###############################
-
-
-Mô tả cấu trúc tệp cấu hình màn chơi:
-1/ Dòng đầu tiên bao gồm 3 số nguyên L, R, C:
-L - số thứ tự màn chơi
-R - số hàng của bản đồ
-C - số cột của bản đồ
-
-2/ R dòng tiếp theo, mỗi dòng có C kí tự. Mỗi kí tự đại diện cho một đối tượng trên bản đồ:
-Tiles:
-# - Wall
-* - Brick
-x - Portal
-
-Character:
-p - Bomber
-1 - Balloon
-2 - Oneal
-3 - Doll
-4 - Minvo
-5 - Kondonria
-6 - Dragon
-7 - batMonster
-8 - Phoenix
-Items:
-b - Bomb Item
-f - Flame Item
-s - Speed Item
-B - Bomb Pass Item
-F - Flame Pass Item
-W - Brick Pass Item
-l - Plus 1 live
-
-Kí tự khác các kí tự trên - Grass
Index: ../BomberMan1.0/src/main/java/GameMonster/BatMonster.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GameMonster/BatMonster.java b/../BomberMan1.0/src/main/java/GameMonster/BatMonster.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GameMonster/BatMonster.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,85 +0,0 @@
-package GameMonster;
-
-import GameMonster.moveMethod.moveType2;
-import GameSprite.GameSprite;
-
-public class BatMonster extends Monster {
-  private final moveType2 movetype = new moveType2();
-
-  public BatMonster(int xUnit, int yUnit) {
-    super(xUnit, yUnit, GameSprite.batLeft1.getFxImage());
-    direction = 3;
-    velocity = 2;
-  }
-
-  /**
-   * Move logic.
-   */
-  public void move() {
-    int tempX = x;
-    int tempY = y;
-    switch (direction) {
-      case 0:
-        tempY = y + velocity;
-        break;
-      case 1:
-        tempY = y - velocity;
-        break;
-      case 2:
-        tempX = x - velocity;
-        break;
-      case 3:
-        tempX = x + velocity;
-        break;
-      default:
-        break;
-    }
-
-    for (int i = 0; i < 4; i++) {
-      int xx = tempX + AddToXToCheckCollision[i];
-      int yy = tempY + AddToYToCheckCollision[i];
-      if (!canMove(xx, yy)) {
-        direction = movetype.setDirection(direction);
-        return;
-      }
-    }
-
-    this.setX(tempX);
-    this.setY(tempY);
-  }
-
-  @Override
-  public void update() {
-
-    if (!isAlive) {
-      deadAnimation();
-    } else {
-      move();
-      animate();
-      ifCollideWithPowerupOrFlame();
-      if (direction == 0) {
-        this.setImg(GameSprite.movingSprite(GameSprite.batLeft1, GameSprite.batLeft2, GameSprite.batLeft3,
-            animation, timeTransfer).getFxImage());
-      } else if (direction == 1) {
-        this.setImg(GameSprite.movingSprite(GameSprite.batRight1, GameSprite.batRight2, GameSprite.batRight3,
-            animation, timeTransfer).getFxImage());
-      } else if (direction == 2) {
-        this.setImg(GameSprite.movingSprite(GameSprite.batLeft1, GameSprite.batLeft1, GameSprite.batLeft3,
-            animation, timeTransfer).getFxImage());
-      } else if (direction == 3) {
-        this.setImg(GameSprite.movingSprite(GameSprite.batRight1, GameSprite.batRight2, GameSprite.batRight3,
-            animation, timeTransfer).getFxImage());
-      }
-    }
-  }
-
-  @Override
-  public void deadAnimation() {
-    if (timeDead-- > 0) {
-      this.setImg(GameSprite.movingSprite(GameSprite.batDown1, GameSprite.mobDead12, GameSprite.mobDead13,
-          animation, timeTransfer).getFxImage());
-    } else {
-      this.removeFromGame();
-    }
-  }
-}
Index: ../BomberMan1.0/src/main/java/module-info.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/module-info.java b/../BomberMan1.0/src/main/java/module-info.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/module-info.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,8 +0,0 @@
-module Main {
-    requires javafx.controls;
-    requires javafx.fxml;
-    requires javafx.media;
-    requires java.desktop;
-    opens Main to javafx.fxml;
-    exports Main;
-}
\ No newline at end of file
Index: ../BomberMan1.0/src/main/java/GameBomb/Bomb.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GameBomb/Bomb.java b/../BomberMan1.0/src/main/java/GameBomb/Bomb.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GameBomb/Bomb.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,249 +0,0 @@
-package GameBomb;
-
-import GameMapEntity.GameAnimationEntity;
-import GameCharacter.Bomber;
-import GameMapEntity.GameEntity;
-import GameSound.GameSound;
-import GameSprite.GameSprite;
-import Main.BomberManGame;
-import GameMapEntity.EntityObject.Grass;
-import GameMapEntity.EntityObject.Brick;
-import GameMapEntity.EntityObject.Portal;
-import GameMapEntity.EntityObject.Wall;
-import GameMonster.Monster;
-import GameMonster.BatMonster;
-import GameMonster.Balloon;
-import GameMonster.Doll;
-import GameMonster.Dragon;
-import GameMonster.Kondoria;
-import GameMonster.Minvo;
-import GameMonster.Oneal;
-import GameMonster.Phoenix;
-
-import javafx.scene.canvas.GraphicsContext;
-import java.util.ArrayList;
-import java.util.List;
-
-
-public class Bomb extends GameAnimationEntity {
-    private int timeBeforeExplore = 100;
-    private int timeFlame = 14;
-
-    private static final int timeTransfer = 40;
-    private boolean explored;
-    private boolean allowPass = true;
-    private Bomber bomber;
-
-    private int flameLength = 1;
-    private List<BombAnimation> flameList = new ArrayList<>();
-
-    private GameSound soundPlaceBomb = new GameSound(GameSound.PLACE_BOMB_SOUND);
-    private GameSound soundExplode = new GameSound(GameSound.EXPLOSION_SOUND);
-
-    /**
-     * Create a bomb.
-     */
-    public Bomb(int x, int y, int flameLength, Bomber bomber) {
-        super(x, y, GameSprite.bomb.getFxImage());
-        this.flameLength = flameLength;
-        explored = false;
-        this.bomber = bomber;
-        soundPlaceBomb.play_sound();
-    }
-
-    @Override
-    public void update() {
-        animate();
-        if (!explored) {
-            if (allowPass) {
-                int subX = bomber.getX() - getX();
-                int subY = bomber.getY() - getY();
-                if (subX < -20 || subX > 31 || subY > 33 || subY < -31) {
-                    allowPass = false;
-                }
-            }
-            if (timeBeforeExplore-- > 0) {
-                setImg(GameSprite.movingSprite(GameSprite.bomb, GameSprite.bomb1, GameSprite.bomb2, animation, timeTransfer)
-                        .getFxImage());
-            } else {
-                explored = true;
-                explosion();
-            }
-        } else {
-
-            if (timeFlame-- == 0) {
-                setImg(null);
-            }
-        }
-    }
-
-    /**
-     * Render bomb explosion.
-     */
-    private void explosion() {
-        // init FlameList
-        int x = getXUnit();
-        int y = getYUnit();
-
-        flameList.add(new BombAnimation(x, y, 4, false));// add center
-        // truong hop bomber o tren qua bom
-        GameEntity e = BomberManGame.getGameCanvas().getEntityInCoodinate(x, y);
-        canPassThrough(e);
-
-        // check left
-        int il = 1;
-        for (; il <= flameLength; il++) { // check tu 1 den FrameLen neu gap vat can break
-            int xLeft = x - il;
-            e = BomberManGame.getGameCanvas().getEntityInCoodinate(xLeft, y);
-            if (!canPassThrough(e)) {
-                break;
-            }
-        }
-        for (int i = 1; i < il; i++) { // them flame tu 1 den do dai frame lon nhat co the
-            if (i == il - 1) {
-                flameList.add(new BombAnimation(x - i, y, 2, true));
-            } else {
-                flameList.add(new BombAnimation(x - i, y, 2, false));
-            }
-        }
-
-        // check right
-        int ir = 1;
-        for (; ir <= flameLength; ir++) {
-            int xRight = x + ir;
-            e = BomberManGame.getGameCanvas().getEntityInCoodinate(xRight, y);
-            if (!canPassThrough(e)) {
-                break;
-            }
-        }
-        for (int i = 1; i < ir; i++) {
-            if (i == ir - 1) {
-                flameList.add(new BombAnimation(x + i, y, 3, true));
-            } else {
-                flameList.add(new BombAnimation(x + i, y, 3, false));
-            }
-        }
-
-        // check up
-        int iu = 1;
-        for (; iu <= flameLength; iu++) {
-            int yUp = y - iu;
-            e = BomberManGame.getGameCanvas().getEntityInCoodinate(x, yUp);
-            if (!canPassThrough(e)) {
-                break;
-            }
-        }
-        for (int i = 1; i < iu; i++) {
-            if (i == iu - 1) {
-                flameList.add(new BombAnimation(x, y - i, 0, true));
-            } else {
-                flameList.add(new BombAnimation(x, y - i, 0, false));
-            }
-        }
-
-        // check down
-        int id = 1;
-        for (; id <= flameLength; id++) {
-            int yDown = y + id;
-            e = BomberManGame.getGameCanvas().getEntityInCoodinate(x, yDown);
-            if (!canPassThrough(e)) {
-                break;
-            }
-        }
-        for (int i = 1; i < id; i++) {
-            if (i == id - 1) {
-                flameList.add(new BombAnimation(x, y + i, 1, true));
-            } else {
-                flameList.add(new BombAnimation(x, y + i, 1, false));
-            }
-        }
-        soundExplode.play_sound();
-    }
-
-    public void frameRender(GraphicsContext gc) {
-        flameList.forEach(g -> g.render(gc));
-    }
-
-    public boolean isExplored() {
-        return explored;
-    }
-
-    /**
-     * Determine what object can fire pass through.
-     *
-     * @param e Entity that we take in measure
-     * @return True if fire can pass through and otherwise false
-     */
-    public boolean canPassThrough(GameEntity e) {
-        int gotScore = 0;
-        if (e instanceof Brick brick) {
-            brick.setDestroyed(true);
-            gotScore = 5;
-            BomberManGame.setScore(BomberManGame.getScore() + gotScore);
-            return false;
-        }
-        if (e instanceof Wall || e instanceof Portal) {
-            return false;
-        }
-
-        if (e instanceof Monster monster) {
-            if (monster instanceof Dragon) {
-                if (monster.getHit() == 1) {
-                    monster.setAlive(false);
-                } else {
-                    monster.setHit(monster.getHit() + 1);
-                    monster.setVelocity(2);
-                    // System.out.println(monster.getHit());
-                }
-
-            } else if (monster instanceof Phoenix) {
-                if (monster.getHit() == 1) {
-                    monster.setAlive(false);
-                } else {
-                    monster.setHit(monster.getHit() + 1);
-                    monster.setVelocity(4);
-                    // System.out.println(monster.getHit());
-                }
-            } else {
-                monster.setAlive(false);
-            }
-            if (e instanceof Balloon)
-                gotScore = 10;
-            else if (e instanceof Oneal || e instanceof Doll)
-                gotScore = 20;
-            else if (e instanceof Minvo)
-                gotScore = 30;
-            else if (e instanceof Kondoria)
-                gotScore = 35;
-            else if (e instanceof Dragon)
-                gotScore = 50;
-            else if (e instanceof BatMonster)
-                gotScore = 40;
-            else if (e instanceof Phoenix)
-                gotScore = 60;
-            BomberManGame.setScore(BomberManGame.getScore() + gotScore);
-        }
-
-        if (e instanceof Bomb bomb) {
-            bomb.setTimeBeforeExplore(5);
-        }
-        return true;
-    }
-
-    public List<BombAnimation> getFlameList() {
-        return flameList;
-    }
-
-    public boolean isAllowPass() {
-        return allowPass;
-    }
-
-    public void setAllowPass(boolean allowPass) {
-        this.allowPass = allowPass;
-    }
-
-    public void setTimeBeforeExplore(int timeBeforeExplore) {
-        this.timeBeforeExplore = timeBeforeExplore;
-    }
-}
-
Index: ../BomberMan1.0/src/main/java/GameMapGraphics/GameBase.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GameMapGraphics/GameBase.java b/../BomberMan1.0/src/main/java/GameMapGraphics/GameBase.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GameMapGraphics/GameBase.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,479 +0,0 @@
-package GameMapGraphics;
-
-import GameCharacter.BomberCharacter;
-import GameMapEntity.EntityObject.Grass;
-import GameMapEntity.EntityObject.Brick;
-import GameMapEntity.EntityObject.Portal;
-import GameMapEntity.GameEntity;
-import GameMonster.Monster;
-import GameCharacter.Bomber;
-import GameTime.Timers;
-import Main.BomberManGame;
-import GameSound.GameSound;
-import GameSound.GameSound.SoundsStatusGame;
-import GameBomb.Bomb;
-import GameMapGraphics.GameMap;
-
-import javafx.scene.canvas.Canvas;
-import javafx.scene.canvas.GraphicsContext;
-import javafx.scene.image.Image;
-import javafx.scene.paint.Color;
-import javafx.scene.text.Font;
-
-import java.util.ArrayList;
-import java.util.List;
-import java.io.FileInputStream;
-import java.io.FileNotFoundException;
-
-public class GameBase {
-    private static String[] paths = {"src/resources/levels/Level1.txt",
-            "src/resources/levels/Level2.txt", "src/resources/levels/Level3.txt",
-            "src/resources/levels/Level4.txt", "src/resources/levels/Level5.txt",
-            "src/resources/levels/Level6.txt", "src/resources/levels/Level7.txt"};
-    private static String[] levelName = {"SCARY MEADOW", "NORTH POLE", "STEEL PRISON", "WHOLE CAKE",
-            "MARINE FORCE", "DEADLY DESERT", "CRAZY HYDRA"};
-    
-    private boolean pause_game = false;
-    private boolean game_over = false;
-    private boolean game_winner = false;
-    private int timeShowGameOver = 250;
-    private boolean returnMainMenu = false;
-
-    private List<Grass> grassList;
-    private List<GameEntity> entityList;
-    private List<Monster> monsterList;
-    private List<Bomb> bombList = new ArrayList<>();
-
-    // Bomber
-    public static Bomber bomberman = new Bomber(1, 1, new KeyboardInput());
-    public Bomber bomberInPreLevel = new Bomber(1, 1, new KeyboardInput());
-    public Bomber originBomber;
-
-    // Level GameMap
-    private GameMap gameMap = new GameMap();
-    private int currentMap = 1;
-    private int timeShowTransferMap = 140;
-    private boolean transferMap = false;
-
-    private Timers timers = new Timers();
-
-    // sounds
-    private GameSound soundGame = new GameSound(GameSound.GAME_SOUND);
-    private GameSound soundLoseGame = new GameSound(GameSound.LOSE_GAME_SOUND);
-    private GameSound soundWinGame = new GameSound(GameSound.WIN_GAME_SOUND);
-    private GameSound soundLevelup = new GameSound(GameSound.TRANSFER_LEVEL_SOUND);
-
-    /**
-     * Create new game.
-     */
-    public void createNewGame() {
-        game_over = false;
-        currentMap = 1;
-        BomberManGame.setLives(100);
-        BomberManGame.setScore(0);
-        Timers.setDelay(3000);
-        bomberman = new Bomber(1, 1, new KeyboardInput());
-        createMap();
-        updateEnemy(bomberman);
-
-    }
-
-    /**
-     * Create map for each level.
-     */
-    public void createMap(){
-        if (currentMap <= paths.length) {
-            timers = new Timers();
-
-            Timers.setDelay(3000);
-
-            gameMap.CreateNewMap(paths[currentMap - 1], currentMap - 1);
-
-            originBomber = gameMap.getBomber();
-            if (currentMap > 1) {
-                // TODO: Thêm các trạng thái cũ vào bomber ở level mới
-                bomberman.restoreBomber(bomberInPreLevel);
-                // timers.stop();
-            }
-            bomberman.setX(originBomber.getX());
-            bomberman.setY(originBomber.getY());
-            bomberman.setAlive(true);
-
-            grassList = gameMap.getGrassList();
-            entityList = gameMap.getCollidableEntities();
-            monsterList = gameMap.getEnemyList();
-
-            updateEnemy(bomberman);
-
-            timers.setInterval(BomberManGame.timeLiving);
-            timers.setTime();
-        }
-    }
-
-    public void update() {
-        if (!transferMap) {
-            updateAllEntities();
-            Timers.setDelay(Timers.getDelay());
-            if (timeShowTransferMap == 140) {
-                soundGame.play_sound();
-            }
-            soundLevelup.stop_sound();
-            if (!bomberman.isAlive()) {
-                bomberman.setX(originBomber.getX());
-                bomberman.setY(originBomber.getY());
-                bomberman.setAlive(true);
-            }
-        } else {
-            soundGame.stop_sound();
-            soundLevelup.play_sound();
-        }
-    }
-
-    /**
-     * Draw all entities.
-     */
-    public void updateAllEntities() {
-        bomberman.update();
-
-        for (GameEntity e : monsterList) {
-            if (e.getImg() == null) {
-                monsterList.remove(e);
-                break;
-            } else {
-                e.update();
-            }
-        }
-        for (GameEntity e : entityList) {
-            if (e.getImg() == null) { // if img == null, thi xoa entity do
-                if (e instanceof Brick brick) {
-                    if (brick.hasPortal()) {
-                        this.addEntity(new Portal(e.getXUnit(), e.getYUnit()));
-                    }
-                    if (brick.hasPowerup()) {
-                        this.addEntity(brick.getPowerup());
-                    }
-                }
-                entityList.remove(e);
-                break;
-            } else {
-                e.update();
-            }
-        }
-
-        if (monsterList.isEmpty()) {
-            bomberman.setKillAllEnemies((true));
-        }
-
-        if (bomberman.isCollideWithAPortal()) {
-            bomberInPreLevel.restoreBomber(bomberman);
-            currentMap++;
-            // timers.stop();
-            timers.setPlay(false);
-            transferMap = true;
-
-            if (currentMap > paths.length) {
-                transferMap = false;
-                game_over = true;
-                return;
-            }
-            this.createMap();
-        }
-        if (BomberManGame.getLives() == 0) {
-            game_over = true;
-            // System.out.println("get live");
-        }
-    }
-
-    private void updateEnemy(Bomber bomberman) {
-        for (Monster e : monsterList) {
-            e.setBomber(bomberman);
-        }
-    }
-
-    /**
-     * Get enitites coordinate for collsion check.
-     *
-     * @param x position x
-     * @param y position x
-     * @return
-     */
-    public GameEntity getEntityInCoodinate(int x, int y) {
-        for (GameEntity e : entityList) {
-            if (e.getXUnit() == x && e.getYUnit() == y) {
-                return e;
-            }
-        }
-
-        for (Monster e : monsterList) {
-            if (e.getXUnit() == x && e.getYUnit() == y) {
-                return e;
-            }
-        }
-
-        bombList = bomberman.getBombList();
-        for (Bomb b : bombList) {
-            if (b.getXUnit() == x && b.getYUnit() == y) {
-                return b;
-            }
-        }
-        return null;
-    }
-
-    /**
-     * Get grass list.
-     */
-    public GameEntity getGrass(int x, int y) {
-        for (GameEntity e : grassList) {
-            if (e.getXUnit() == x && e.getYUnit() == y) {
-                return e;
-            }
-        }
-        return null;
-    }
-
-    public List<GameEntity> getCollidableEntities() {
-        return entityList;
-    }
-
-    public List<Grass> getGrassList() {
-        return grassList;
-    }
-
-    /**
-     * Render map.
-     */
-    public void render(Canvas canvas) {
-        GraphicsContext gc = canvas.getGraphicsContext2D();
-        gc.clearRect(0, 0, canvas.getWidth(), canvas.getHeight());
-        if (!transferMap) {
-            renderInfoOfCurrentLevel(gc);
-            grassList.forEach(e -> e.render(gc));
-            entityList.forEach(e -> e.render(gc));
-            monsterList.forEach(e -> e.render(gc));
-            bomberman.bombRender(gc);
-            bomberman.render(gc);
-        } else {
-            if (timeShowTransferMap-- > 0) {
-                renderTransferLevelScreen(gc);
-            } else {
-                transferMap = false;
-                timeShowTransferMap = 140;
-            }
-        }
-        if (game_over) {
-            soundGame.stop_sound();
-            if (timeShowGameOver-- > 0) {
-                if (BomberManGame.getLives() > 0) {
-                    soundWinGame.play_sound();
-                } else {
-                    soundLoseGame.play_sound();
-                }
-                renderGameOver(gc);
-            }
-        }
-    }
-
-    public void renderTransferLevelScreen(GraphicsContext gc) {
-        FileInputStream file;
-        try {
-            file = new FileInputStream("src/resources/textures/levelbackground.png");
-            final Image backgroundLevel = new Image(file);
-            gc.setFill(Color.WHITE);
-            gc.clearRect(0, 0, 992, 448);
-            gc.drawImage(backgroundLevel, 0, 0);
-        } catch (FileNotFoundException e) {
-            e.printStackTrace();
-            System.out.println("Game.renderTransferLevelScreen()");
-        }
-        gc.setFont(Font.font("Impact", 60));
-        gc.fillText("Level: " + currentMap, 250, 200);
-        gc.setFill(Color.RED);
-        gc.fillText(levelName[currentMap - 1], 250, 300);
-    }
-
-    /**
-     * Render living time, score and buffs of player.
-     */
-    public void renderInfoOfCurrentLevel(GraphicsContext gc) {
-        gc.setFill(Color.BLACK);
-        gc.fillRect(0, 416, 992, 448);
-        gc.setFill(Color.WHITE);
-        gc.setFont(new Font("", 15));
-        gc.fillText("Time left: " + formatTime(timers.getInterval()), 10, 440);
-        gc.fillText("Level: " + currentMap, 200, 440);
-        gc.fillText("Lives: " + BomberManGame.getLives(), 300, 440);
-        gc.fillText("Scores: " + BomberManGame.getScore(), 400, 440);
-        if (bomberman.canPassFlame) {
-
-            if (bomberman.timeToStopFlame-- > 0 && bomberman.timeToStopFlame / 37 > 0) {
-                gc.fillText("Pass Flame in: " + formatTime(bomberman.timeToStopFlame / 37), 700, 440);
-            } else {
-                bomberman.canPassFlame = false;
-            }
-        }
-        if (bomberman.canPassBom) {
-            if (bomberman.timeToStopBomb-- > 0 && bomberman.timeToStopBomb / 37 > 0) {
-                gc.fillText("Pass Bomb in: " + formatTime(bomberman.timeToStopBomb / 37), 500, 440);
-            } else {
-                bomberman.canPassBom = false;
-            }
-
-        }
-    }
-
-    /**
-     * Format the displayed time.
-     *
-     * @param time time argument
-     * @return a String to display time in format
-     */
-    public String formatTime(int time) {
-        String res = (time / 60) + ":";
-        int second = time % 60;
-        if (second < 10) {
-            res += "0" + second;
-        } else {
-            res += second;
-        }
-        return res;
-    }
-
-    public void renderGameOver(GraphicsContext gc) {
-        FileInputStream file;
-        if (BomberManGame.getLives() <= 0) {
-            try {
-                file = new FileInputStream("src/resources/textures/gameover.png");
-                final Image backgroundLevel = new Image(file);
-                gc.setFill(Color.WHITE);
-                gc.clearRect(0, 0, 992, 448);
-                gc.drawImage(backgroundLevel, 0, 0);
-            } catch (FileNotFoundException e) {
-                e.printStackTrace();
-                System.out.println("Game.renderGameOver()");
-            }
-            gc.setFont(Font.font("Impact", 60));
-            int score = BomberManGame.getScore();
-            gc.fillText("Your score: " + score, 200, 300);
-            HighScore.setNewHighScore(score);
-            gc.setFill(Color.RED);
-        }
-
-        if (BomberManGame.getLives() > 0) {
-            try {
-                file = new FileInputStream("src/resources/textures/victory.png");
-                final Image backgroundLevel = new Image(file);
-                gc.setFill(Color.WHITE);
-                gc.clearRect(0, 0, 992, 448);
-                gc.drawImage(backgroundLevel, 0, 0);
-            } catch (FileNotFoundException e) {
-                e.printStackTrace();
-                System.out.println("Game.renderGameOver()");
-            }
-            gc.setFont(Font.font("Impact", 60));
-            gc.setFill(Color.RED);
-            int score = BomberManGame.getScore();
-            HighScore.setNewHighScore(score);
-            gc.fillText("New record: " + score, 350, 440);
-        }
-        // gc.setFont(Font.font("Impact", 60));
-        // String result = (BombermanGame.getLives() > 0) ? "You win" : "You lose";
-        // gc.fillText("Game Over!\n" + result, 250, 200);
-        // gc.setFill(Color.RED);
-    }
-
-    public void setGrassList(List<Grass> grassList) {
-        this.grassList = grassList;
-    }
-
-    public void addEntity(GameEntity e) {
-        entityList.add(e);
-    }
-
-    public void setTransferLevel(boolean transferLevel) {
-        this.transferMap = transferLevel;
-    }
-
-
-    public boolean isReturnMainMenu() {
-        return returnMainMenu;
-    }
-
-    public void setReturnMainMenu(boolean returnMainMenu) {
-        this.returnMainMenu = returnMainMenu;
-    }
-
-    public void setPause(boolean pause) {
-        this.pause_game = pause;
-    }
-
-    public boolean isPause() {
-        return pause_game;
-    }
-
-    public void pauseSound() {
-        if (soundGame.isRunning()) {
-            soundGame.pause_sound();
-        }
-        if (soundLevelup.isRunning()) {
-            soundLevelup.pause_sound();
-        }
-        if (soundWinGame.isRunning()) {
-            soundWinGame.pause_sound();
-        }
-        if (soundLoseGame.isRunning()) {
-            soundLoseGame.pause_sound();
-        }
-    }
-
-    public void stopSound() {
-        if (soundGame.isRunning()) {
-            soundGame.stop_sound();
-        }
-        if (soundLevelup.isRunning()) {
-            soundLevelup.stop_sound();
-        }
-        if (soundWinGame.isRunning()) {
-            soundWinGame.stop_sound();
-        }
-        if (soundLoseGame.isRunning()) {
-            soundLoseGame.stop_sound();
-        }
-    }
-
-    public void resumeSound() {
-        if (soundWinGame.getStatusGame() == SoundsStatusGame.PAUSE) {
-            if (!soundGame.isRunning()) {
-                soundGame.resume_sound();
-            }
-            if (!soundLevelup.isRunning()) {
-                soundLevelup.resume_sound();
-            }
-            if (!soundWinGame.isRunning()) {
-                soundWinGame.resume_sound();
-            }
-            if (!soundLoseGame.isRunning()) {
-                soundLoseGame.resume_sound();
-            }
-        }
-    }
-
-    public Timers getTimers() {
-        return timers;
-    }
-
-    public boolean isOver() {
-        return game_over;
-    }
-
-    public int getTimeShowTransferLevel() {
-        return timeShowTransferMap;
-    }
-
-    public int getTimeShowGameOver() {
-        return timeShowGameOver;
-    }
-
-    public void setTimeShowGameOver() {
-        timeShowGameOver = 250;
-    }
-}
Index: ../BomberMan1.0/.idea/encodings.xml
===================================================================
diff --git a/../BomberMan1.0/.idea/encodings.xml b/../BomberMan1.0/.idea/encodings.xml
deleted file mode 100644
--- a/../BomberMan1.0/.idea/encodings.xml	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="Encoding">
-    <file url="file://$PROJECT_DIR$/src/main/java" charset="UTF-8" />
-    <file url="file://$PROJECT_DIR$/src/main/resources" charset="UTF-8" />
-  </component>
-</project>
\ No newline at end of file
Index: ../BomberMan1.0/src/main/java/GameTime/Timers.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GameTime/Timers.java b/../BomberMan1.0/src/main/java/GameTime/Timers.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GameTime/Timers.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,73 +0,0 @@
-package GameTime;
-
-import Main.BomberManGame;
-import GameMapGraphics.GameBase;
-
-import java.util.Timer;
-import java.util.TimerTask;
-
-public class Timers {
-    private boolean isPlaying = false;
-    Timer timer = new Timer();
-    private int interval;
-    private static int delay = 1000; // 1s
-    private static final int PERIOD = 1000; // 1s
-
-    private int check;
-
-    /**
-     * Display time.
-     */
-    public void setTime() {
-        isPlaying = true;
-        // timer.cancel();
-        timer.scheduleAtFixedRate(new TimerTask() {
-            @Override
-            public void run() {
-                if (interval <= 1) {
-                    timer.cancel();
-                    if (check == BomberManGame.timeLiving) {
-                        GameBase.bomberman.setAlive(false);
-                    }
-                    BomberManGame.setLives(0);
-                    // System.out.println("gameover" + interval);
-                    isPlaying = false;
-                }
-                if (isPlaying) {
-                    --interval;
-                    // System.out.println(interval);
-                }
-            }
-        }, delay, PERIOD);
-    }
-
-    public boolean isPlaying() {
-        return isPlaying;
-    }
-
-    public void setPlay(boolean play) {
-        isPlaying = play;
-    }
-
-    public int getInterval() {
-        return interval;
-    }
-
-    public void setInterval(int interval) {
-        this.interval = interval;
-        check = interval;
-        // timer.cancel();
-    }
-
-    public static int getDelay() {
-        return delay;
-    }
-
-    public static void setDelay(int newDelay) {
-        delay = newDelay;
-    }
-
-    public void setPeriod() {
-        timer.cancel();
-    }
-}
Index: ../BomberMan1.0/src/main/java/GameMonster/Oneal.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GameMonster/Oneal.java b/../BomberMan1.0/src/main/java/GameMonster/Oneal.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GameMonster/Oneal.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,86 +0,0 @@
-package GameMonster;
-
-import GameMonster.moveMethod.moveType1;
-import GameSprite.GameSprite;
-
-public class Oneal extends Monster {
-  private moveType1 moveType = new moveType1();
-
-  public Oneal(int xUnit, int yUnit) {
-    super(xUnit, yUnit, GameSprite.onealLeft1.getFxImage());
-    direction = 3;
-    velocity = 2;
-  }
-
-  /**
-   * Move logic.
-   */
-  public void move() {
-    int tempX = x;
-    int tempY = y;
-    switch (direction) {
-      case 0:
-        tempY = y + velocity;
-        break;
-      case 1:
-        tempY = y - velocity;
-        break;
-      case 2:
-        tempX = x - velocity;
-        break;
-      case 3:
-        tempX = x + velocity;
-        break;
-      default:
-        break;
-    }
-
-    for (int i = 0; i < 4; i++) {
-      int xx = tempX + AddToXToCheckCollision[i];
-      int yy = tempY + AddToYToCheckCollision[i];
-      if (!canMove(xx, yy)) {
-        setDirection(moveType.setDirection(direction));
-        return;
-      }
-    }
-
-
-    this.setX(tempX);
-    this.setY(tempY);
-  }
-
-  @Override
-  public void update() {
-    if (!isAlive) {
-      deadAnimation();
-    } else {
-      move();
-      animate();
-      ifCollideWithPowerupOrFlame();
-      if (direction == 0) {
-        this.setImg(GameSprite.movingSprite(GameSprite.onealLeft1, GameSprite.onealLeft2, GameSprite.onealLeft3,
-            animation, timeTransfer).getFxImage());
-      } else if (direction == 1) {
-        this.setImg(GameSprite.movingSprite(GameSprite.onealRight1, GameSprite.onealRight2, GameSprite.onealRight3,
-            animation, timeTransfer).getFxImage());
-      } else if (direction == 2) {
-        this.setImg(GameSprite.movingSprite(GameSprite.onealLeft1, GameSprite.onealRight1, GameSprite.onealLeft3,
-            animation, timeTransfer).getFxImage());
-      } else if (direction == 3) {
-        this.setImg(GameSprite.movingSprite(GameSprite.onealRight1, GameSprite.onealLeft2, GameSprite.onealRight2,
-            animation, timeTransfer).getFxImage());
-      }
-    }
-  }
-
-  @Override
-  public void deadAnimation() {
-    // TODO Auto-generated method stub
-    if (timeDead-- > 0) {
-      this.setImg(GameSprite.movingSprite(GameSprite.onealDead, GameSprite.mobDead11, GameSprite.mobDead12,
-          animation, timeTransfer).getFxImage());
-    } else {
-      this.removeFromGame();
-    }
-  }
-}
Index: ../BomberMan1.0/src/main/java/GamePowerUpItems/PlusBombItem.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GamePowerUpItems/PlusBombItem.java b/../BomberMan1.0/src/main/java/GamePowerUpItems/PlusBombItem.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GamePowerUpItems/PlusBombItem.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,10 +0,0 @@
-package GamePowerUpItems;
-
-import GameSprite.GameSprite;
-
-public class PlusBombItem extends Powerup {
-
-  public PlusBombItem(int x, int y) {
-    super(x, y, GameSprite.powerupBombs.getFxImage());
-  }
-}
Index: ../BomberMan1.0/nbactions.xml
===================================================================
diff --git a/../BomberMan1.0/nbactions.xml b/../BomberMan1.0/nbactions.xml
deleted file mode 100644
--- a/../BomberMan1.0/nbactions.xml	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<actions>
-    <action>
-        <actionName>run</actionName>
-        <packagings>
-            <packaging>jar</packaging>
-        </packagings>
-        <goals>
-            <goal>process-classes</goal>
-            <goal>org.codehaus.mojo:exec-maven-plugin:1.5.0:exec</goal>
-        </goals>
-        <properties>
-            <exec.args>--module-path %classpath --module ${project.groupId}/${mainClass}</exec.args>
-            <exec.executable>java</exec.executable>
-        </properties>
-    </action>
-<action>
-        <actionName>debug</actionName>
-        <packagings>
-            <packaging>jar</packaging>
-        </packagings>
-        <goals>
-            <goal>process-classes</goal>
-            <goal>org.codehaus.mojo:exec-maven-plugin:1.5.0:exec</goal>
-        </goals>
-        <properties>
-            <exec.args>-agentlib:jdwp=transport=dt_socket,server=n,address=${jpda.address} --module-path %classpath --module ${project.groupId}/${mainClass}</exec.args>
-            <exec.executable>java</exec.executable>
-            <jpda.listen>true</jpda.listen>
-        </properties>
-</action>
-
-</actions>
Index: ../.idea/compiler.xml
===================================================================
diff --git a/../.idea/compiler.xml b/../.idea/compiler.xml
deleted file mode 100644
--- a/../.idea/compiler.xml	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,14 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="CompilerConfiguration">
-    <annotationProcessing>
-      <profile name="Maven default annotation processors profile" enabled="true">
-        <sourceOutputDir name="target/generated-sources/annotations" />
-        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
-        <outputRelativeToContentRoot value="true" />
-        <module name="BomberMan1.0" />
-        <module name="Bomberman" />
-      </profile>
-    </annotationProcessing>
-  </component>
-</project>
\ No newline at end of file
Index: ../BomberMan1.0/src/main/java/GamePowerUpItems/FlamePassItem.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GamePowerUpItems/FlamePassItem.java b/../BomberMan1.0/src/main/java/GamePowerUpItems/FlamePassItem.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GamePowerUpItems/FlamePassItem.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,10 +0,0 @@
-package GamePowerUpItems;
-
-import GameSprite.GameSprite;
-
-public class FlamePassItem extends Powerup {
-
-  public FlamePassItem(int x, int y) {
-    super(x, y, GameSprite.powerupFlamepass.getFxImage());
-  }
-}
Index: ../BomberMan1.0/src/main/java/GameMonster/Minvo.java
===================================================================
diff --git a/../BomberMan1.0/src/main/java/GameMonster/Minvo.java b/../BomberMan1.0/src/main/java/GameMonster/Minvo.java
deleted file mode 100644
--- a/../BomberMan1.0/src/main/java/GameMonster/Minvo.java	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,87 +0,0 @@
-package GameMonster;
-
-import GameMonster.moveMethod.moveType2;
-import GameSprite.GameSprite;
-
-public class Minvo extends Monster {
-  private final moveType2 movetype = new moveType2();
-
-  public Minvo(int xUnit, int yUnit) {
-    super(xUnit, yUnit, GameSprite.minvoLeft1.getFxImage());
-    direction = 1;
-    velocity = 2;
-  }
-
-  /**
-   * Move logic.
-   */
-  public void move() {
-
-    int tempX = x;
-    int tempY = y;
-    switch (direction) {
-      case 0:
-        tempY = y + velocity;
-        break;
-      case 1:
-        tempY = y - velocity;
-        break;
-      case 2:
-        tempX = x - velocity;
-        break;
-      case 3:
-        tempX = x + velocity;
-        break;
-      default:
-        break;
-    }
-
-    for (int i = 0; i < 4; i++) {
-      int xx = tempX + AddToXToCheckCollision[i];
-      int yy = tempY + AddToYToCheckCollision[i];
-      if (!canMove(xx, yy)) {
-        direction = movetype.setDirection(direction);
-        return;
-      }
-    }
-
-    this.setX(tempX);
-    this.setY(tempY);
-  }
-
-  @Override
-  public void update() {
-    if (!isAlive) {
-      deadAnimation();
-    } else {
-      move();
-      animate();
-      ifCollideWithPowerupOrFlame();
-      if (direction == 0) {
-        this.setImg(GameSprite.movingSprite(GameSprite.minvoLeft1, GameSprite.minvoLeft2, GameSprite.minvoLeft3,
-            animation, timeTransfer).getFxImage());
-      } else if (direction == 1) {
-        this.setImg(GameSprite.movingSprite(GameSprite.minvoRight1, GameSprite.minvoRight2, GameSprite.minvoRight3,
-            animation, timeTransfer).getFxImage());
-      } else if (direction == 2) {
-        this.setImg(GameSprite.movingSprite(GameSprite.minvoLeft1, GameSprite.minvoRight1, GameSprite.minvoLeft3,
-            animation, timeTransfer).getFxImage());
-      } else if (direction == 3) {
-        this.setImg(GameSprite.movingSprite(GameSprite.minvoRight1, GameSprite.minvoLeft2, GameSprite.minvoRight2,
-            animation, timeTransfer).getFxImage());
-      }
-    }
-  }
-
-  @Override
-  public void deadAnimation() {
-    // TODO Auto-generated method stub
-    if (timeDead-- > 0) {
-      this.setImg(GameSprite.movingSprite(GameSprite.minvoDead, GameSprite.mobDead11, GameSprite.mobDead12,
-          animation, timeTransfer).getFxImage());
-    } else {
-      this.removeFromGame();
-    }
-
-  }
-}
Index: ../BomberMan1.0/src/resources/levels/Level7.txt
===================================================================
diff --git a/../BomberMan1.0/src/resources/levels/Level7.txt b/../BomberMan1.0/src/resources/levels/Level7.txt
deleted file mode 100644
--- a/../BomberMan1.0/src/resources/levels/Level7.txt	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
+++ /dev/null	(revision 61de7a1989ebf54fbf18f1338e8cdec324e6079e)
@@ -1,48 +0,0 @@
-7 13 31
-###############################
-#xp           b          8   x#
-# # # # # # # # # # # # # # # #
-#            8                #
-# # # # # # # # # # # # # # # #
-#             s      7        #
-#B# # # # # # f # # # # # # #F#
-#      6      W               #
-# # # # # # # # # # # # # # # #
-#                 7           #
-# # # # # # # # # # # # # # # #
-#x            l            6 x#
-###############################
-
-
-Mô tả cấu trúc tệp cấu hình màn chơi:
-1/ Dòng đầu tiên bao gồm 3 số nguyên L, R, C:
-L - số thứ tự màn chơi
-R - số hàng của bản đồ
-C - số cột của bản đồ
-
-2/ R dòng tiếp theo, mỗi dòng có C kí tự. Mỗi kí tự đại diện cho một đối tượng trên bản đồ:
-Tiles:
-# - Wall
-* - Brick
-x - Portal
-
-Character:
-p - Bomber
-1 - Balloon
-2 - Oneal
-3 - Doll
-4 - Minvo
-5 - Kondonria
-6 - Dragon
-7 - batMonster
-8 - Phoenix
-Items:
-b - Bomb Item
-f - Flame Item
-s - Speed Item
-B - Bomb Pass Item
-F - Flame Pass Item
-W - Brick Pass Item
-l - Plus 1 live
-
-Kí tự khác các kí tự trên - Grass
